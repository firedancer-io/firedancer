# On every PR and main commit:
# - Build on GCC and Clang
# - Test on GCC

name: Tests
on:
  pull_request:
  push:
    branches:
      - main
      - next
  merge_group:
    types: [checks_requested]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  make-test:
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc]
    runs-on:
      group: github-v1
    env:
      CC: ${{ matrix.compiler }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: dtolnay/rust-toolchain@1.73.0

      - uses: ./.github/actions/deps

      - name: Build unit tests
        run: make -j unit-test

      - uses: ./.github/actions/hugepages

      - name: Run unit tests
        run: |
          sudo prlimit --pid $$ --memlock=-1:-1
          ./test.sh -j --page-sz gigantic
  test-with-sanitizers:
    # Only run sanitizer tests if the gcc tests passed
    needs: make-test
    continue-on-error: true
    strategy:
      matrix:
        # add lowend once its fixed
        feature_set: [modern]
    runs-on:
      group: github-v1
    env:
      MACHINE: linux_clang_combi_${{ matrix.feature_set }}
      EXTRAS: asan ubsan
    steps:
      - run: lscpu

      - uses: actions/checkout@v4

      - uses: ./.github/actions/deps
      - uses: ./.github/actions/hugepages

      - name: Build unit tests
        run: make -j -Otarget unit-test

      - name: Run unit tests
        run: |
          sudo prlimit --pid $$ --memlock=-1:-1
          ./test.sh -j --page-sz gigantic

  test-fuzz-regressions:
    name: Test Fuzz Regressions on ${{ matrix.feature_set }}
    needs: test-with-sanitizers
    strategy:
      matrix:
        feature_set: [modern]
    runs-on:
      group: rhel85-icelake
    env:
      MACHINE: linux_clang_combi_${{ matrix.feature_set }}
      EXTRAS: fuzz asan ubsan
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/deps
      - uses: ./.github/actions/hugepages

      - name: Build Fuzz Tests
        run: make -j -Otarget fuzz-test

      - name: Run Fuzz Tests Against Corpora
        run: |
          sudo prlimit --pid $$ --memlock=-1:-1
          make -k -j -Otarget run-fuzz-test

  make-fuzz:
    # Only build fuzzers if sanitizer tests pass
    # This could be done on a workflow_run trigger
    needs: test-fuzz-regressions
    name: Build Fuzzers for ${{ matrix.feature_set }} feature set
    strategy:
      matrix:
        # add lowend once it's fixed
        feature_set: [modern, highend]
    runs-on:
      group: github-v1
    env:
      MACHINE: linux_clang_combi_${{ matrix.feature_set }}
      EXTRAS: fuzz asan ubsan
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/hugepages
      - uses: ./.github/actions/deps

      - run: sudo apt update && sudo apt install -y zip

      - uses: firedancer-io/fuzzbot-builder@main
        name: Build fuzz tests
        with:
          command: make -j -Otarget fuzz-test

      - name: List Artifacts
        run: |
          ls build/linux/clang/combi/${{ matrix.feature_set }}/fuzz-test

      - uses: firedancer-io/clusterfuzz-action@main
        # Only publish fuzz targets if on main or next
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/next' }}
        name: Upload fuzz targets to ClusterFuzz
        with:
          bucket-name: firedancer-builds.isol-clusterfuzz.appspot.com
          artifact-dir: build/linux/clang/combi/${{ matrix.feature_set }}/fuzz-test
          object-prefix: main/libfuzzer/${{ matrix.feature_set }}/firedancer
          project-id: isol-clusterfuzz
          qualifier: ${{ matrix.feature_set }}
          service-account-credentials: ${{ secrets.FUZZ_SERVICE_ACCT_JSON_BUNDLE }}
