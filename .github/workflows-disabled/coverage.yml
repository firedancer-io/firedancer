name: All Coverage
on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
        - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  all-coverage:
    name: All Coverage
    runs-on:
      group: github-v1
    environment:
      name: github-pages
      url: ${{ steps.pages-deploy.outputs.page_url }}
    env:
      CC: clang
      EXTRAS: llvm-cov
    steps:
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y llvm lcov

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/deps
      - uses: ./.github/actions/hugepages

      - name: Build low unit tests
        env:
          MACHINE: linux_clang_combi_low
        run: make -j -Otarget unit-test

      - name: Run low unit tests
        run: |
          sudo prlimit --pid $$ --memlock=-1:-1
          ./test.sh -j --page-sz gigantic

      - name: Build high unit tests
        env:
          MACHINE: linux_clang_combi_low
        run: make -j -Otarget unit-test

      - name: Run high unit tests
        run: |
          sudo prlimit --pid $$ --memlock=-1:-1
          ./test.sh -j --page-sz gigantic

      - name: Make Test Coverage Report
        run: |
          make combicov-report
          mkdir -p build/pages/
          mv build/combi-cov/html build/pages/cov

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.FUZZ_SERVICE_ACCT_JSON_BUNDLE }}

      # Not using fuzzbot-builder because llvm-cov must be ran in the same environment otherwise paths will not match
      - name: Build Fuzz Tests
        env:
          # Todo: use a matrix strategy
          MACHINE: linux_clang_combi_high
          EXTRAS: fuzz asan
        run: make -j -Otarget fuzz-test

      - name: Fetch Corpus, Generate Fuzzing Coverage
        run: ./.github/workflows/scripts/fuzzcov_generate.sh build/linux/clang/combi/high/fuzz-test/

      - name: Publish Fuzzing Coverage to codecov.io
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: ./.github/workflows/scripts/fuzzcov_publish_codecov.sh

      - name: Generate HTML Fuzzing Coverage Reports
        run: ./.github/workflows/scripts/fuzzcov_genhtml.sh "${{ github.sha }}"

      - name: Drop an Index
        run: |
          cat <<EOS > build/pages/index.html
          <!DOCTYPE html>
          <html>
          <head>
          <title>ðŸ”¥ðŸ’ƒ Pages</title>
          </head>

          <body>
          <h1>ðŸ”¥ðŸ’ƒ Pages</h1>
          <h2>Links ðŸ”—</h2>
          <ul>
          <li><a href="./cov/">Test Coverage</li>
          <li><a href="./fuzzcov/">Fuzzing Coverage</li>
          </ul>
          </body>

          </html>
          EOS

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: './build/pages/'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
