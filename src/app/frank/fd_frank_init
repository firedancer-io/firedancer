#!/bin/bash

if [ $# -ne 4 ]; then
  echo ""
  echo "        Usage: $0 [APP_NAME] [APP_CORE_TARGET] [VERIFY_CNT] [BUILD]"
  echo ""
  exit 1
fi

APP=$1
AFFINITY=$2
VERIFY_CNT=$3
BUILD=$4
shift 4

#######################################################################

CONF=tmp/$APP.cfg

WKSP=$APP.wksp
WKSP_PAGE_CNT=2
WKSP_PAGE_SZ=gigantic
WKSP_PERM=0600

POD_SZ=16384

CNC_APP_SZ=4032

VERIFY_DEPTH=8192
VERIFY_MTU=4804

DEDUP_TCACHE_DEPTH=4194302
DEDUP_TCACHE_MAP_CNT=0
DEDUP_DEPTH=$VERIFY_DEPTH

PACK_BANK_CNT=4
PACK_PRQ_SZ=4096
PACK_CU_EST_TBL_BIN_CNT=4096
PACK_CU_LIMIT=12000001

#######################################################################

FD_LOG_PATH=""
export FD_LOG_PATH

"$BUILD"/bin/fd_wksp_ctl delete "$WKSP" # Okay if fails ... might not exist already
"$BUILD"/bin/fd_wksp_ctl new "$WKSP" "$WKSP_PAGE_CNT" "$WKSP_PAGE_SZ" "$AFFINITY" "$WKSP_PERM" || exit $?

POD=$("$BUILD"/bin/fd_pod_ctl new "$WKSP" "$POD_SZ") || exit $?

MAIN_CNC=$("$BUILD"/bin/fd_tango_ctl new-cnc "$WKSP" 0 tic "$CNC_APP_SZ") || exit $?
"$BUILD"/bin/fd_pod_ctl                      \
  insert "$POD" cstr firedancer.main.cnc "$MAIN_CNC" \
  || exit $?

CNC=`$BUILD/bin/fd_tango_ctl new-cnc $WKSP 0 tic $CNC_APP_SZ` || exit $?
MCACHE=`$BUILD/bin/fd_tango_ctl new-mcache $WKSP $PACK_PRQ_SZ 0 0` || exit $?
DCACHE=`$BUILD/bin/fd_tango_ctl new-dcache $WKSP 4808 $PACK_PRQ_SZ 1 1 0` || exit $?
PACK_CU_EST_TBL_FOOTPRINT=$((32+32*PACK_CU_EST_TBL_BIN_CNT))
PACK_CU_EST_TBL=`$BUILD/bin/fd_wskp_ctl alloc $WKSP 32 $PACK_CU_EST_TBL_FOOTPRINT` || exit $?
RETURN_FSEQ=`$BUILD/bin/fd_tango_ctl new-fseq $WKSP 0` || exit $?
$BUILD/bin/fd_pod_ctl                                           \
  insert $POD cstr  $APP.pack.cnc           $CNC                \
  insert $POD cstr  $APP.pack.out-mcache    $MCACHE             \
  insert $POD cstr  $APP.pack.out-dcache    $DCACHE             \
  insert $POD cstr  $APP.pack.return-fseq   $RETURN_FSEQ        \
  insert $POD ulong $APP.pack.bank-cnt      $PACK_BANK_CNT      \
  insert $POD ulong $APP.pack.txnq-sz       $PACK_PRQ_SZ        \
  insert $POD uint  $APP.pack.cu-limit      $PACK_CU_LIMIT      \
  insert $POD ulong $APP.pack.cu-est-tbl.bin-cnt    $PACK_CU_EST_TBL_BIN_CNT    \
  insert $POD ulong $APP.pack.cu-est-tbl.footprint  $PACK_CU_EST_TBL_FOOTPRINT  \
  insert $POD ulong $APP.pack.cu-est-tbl.memory     $PACK_CU_EST_TBL            \
  || exit $?

CNC=$("$BUILD"/bin/fd_tango_ctl new-cnc "$WKSP" 1 tic "$CNC_APP_SZ") || exit $?
TCACHE=$("$BUILD"/bin/fd_tango_ctl new-tcache "$WKSP" "$DEDUP_TCACHE_DEPTH" "$DEDUP_TCACHE_MAP_CNT") || exit $?
MCACHE=$("$BUILD"/bin/fd_tango_ctl new-mcache "$WKSP" "$DEDUP_DEPTH" 0 0) || exit $?
FSEQ=$("$BUILD"/bin/fd_tango_ctl new-fseq "$WKSP" 0) || exit $?
# Use defaults for cr_max, lazy, seed
"$BUILD"/bin/fd_pod_ctl                        \
  insert "$POD" cstr firedancer.dedup.cnc    "$CNC"    \
  insert "$POD" cstr firedancer.dedup.tcache "$TCACHE" \
  insert "$POD" cstr firedancer.dedup.mcache "$MCACHE" \
  insert "$POD" cstr firedancer.dedup.fseq   "$FSEQ"   \
  || exit $?

for((verify_idx=0;verify_idx<VERIFY_CNT;verify_idx++)); do
  IN_CNC=`$BUILD/bin/fd_tango_ctl new-cnc $WKSP 2 tic $CNC_APP_SZ` || exit $?
  IN_MCACHE=`$BUILD/bin/fd_tango_ctl new-mcache $WKSP $VERIFY_DEPTH 0 0` || exit $?
  IN_DCACHE=`$BUILD/bin/fd_tango_ctl new-dcache $WKSP $VERIFY_MTU $VERIFY_DEPTH 1 1 0` || exit $?
  IN_FSEQ=`$BUILD/bin/fd_tango_ctl new-fseq $WKSP 0` || exit $?
  $BUILD/bin/fd_pod_ctl                                      \
    insert $POD cstr $APP.verifyin.v${verify_idx}in.cnc    $IN_CNC    \
    insert $POD cstr $APP.verifyin.v${verify_idx}in.mcache $IN_MCACHE \
    insert $POD cstr $APP.verifyin.v${verify_idx}in.dcache $IN_DCACHE \
    insert $POD cstr $APP.verifyin.v${verify_idx}in.fseq   $IN_FSEQ   \
    || exit $?

  CNC=`$BUILD/bin/fd_tango_ctl new-cnc $WKSP 2 tic $CNC_APP_SZ` || exit $?
  MCACHE=`$BUILD/bin/fd_tango_ctl new-mcache $WKSP $VERIFY_DEPTH 0 0` || exit $?
  DCACHE=`$BUILD/bin/fd_tango_ctl new-dcache $WKSP $VERIFY_MTU $VERIFY_DEPTH 1 1 0` || exit $?
  FSEQ=`$BUILD/bin/fd_tango_ctl new-fseq $WKSP 0` || exit $?
  $BUILD/bin/fd_pod_ctl                                      \
    insert $POD cstr $APP.verify.v$verify_idx.cnc    $CNC    \
    insert $POD cstr $APP.verify.v$verify_idx.mcache $MCACHE \
    insert $POD cstr $APP.verify.v$verify_idx.dcache $DCACHE \
    insert $POD cstr $APP.verify.v$verify_idx.fseq   $FSEQ   \
    || exit $?
done

BASE_ARGS="--pod $POD"
RUN_ARGS="$BASE_ARGS --log-app $APP --log-thread main"
MON_ARGS="$BASE_ARGS --log-app $APP --log-thread mon"

#######################################################################

mkdir -pv "$(dirname "$CONF")" || exit $?
echo "#!/bin/bash"             >  "$CONF"
{
  echo "# AUTOGENERATED"
  echo "BUILD=$BUILD"
  echo "WKSP=$WKSP"
  echo "AFFINITY=$AFFINITY"
  echo "APP=$APP"
  echo "POD=$POD"
  echo "RUN_ARGS=\"$RUN_ARGS\""
  echo "MON_ARGS=\"$MON_ARGS\""
  echo "MAIN_CNC=$MAIN_CNC"
} >> "$CONF"

#######################################################################

echo Autogenerated configuration at "$CONF"
echo ""
cat "$CONF"
echo ""

echo Configuration details
echo ""
"$BUILD"/bin/fd_pod_ctl list "$POD" 2> /dev/null || exit $?
echo ""

echo success
exit 0

