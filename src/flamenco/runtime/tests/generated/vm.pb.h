/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_ORG_SOLANA_SEALEVEL_V1_VM_PB_H_INCLUDED
#define PB_ORG_SOLANA_SEALEVEL_V1_VM_PB_H_INCLUDED

#include "../../../nanopb/pb_firedancer.h"
#include "invoke.pb.h"
#include "context.pb.h"
#include "metadata.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* We are only concerned with these error kinds as the syscall/VM fuzzers don't
 hit higher level error kinds (e.g., transaction errors) */
typedef enum fd_exec_test_err_kind {
    FD_EXEC_TEST_ERR_KIND_UNSPECIFIED = 0,
    FD_EXEC_TEST_ERR_KIND_EBPF = 1,
    FD_EXEC_TEST_ERR_KIND_SYSCALL = 2,
    FD_EXEC_TEST_ERR_KIND_INSTRUCTION = 3
} fd_exec_test_err_kind_t;

/* Struct definitions */
/* Describes an input data region. Agave's memory mapping sets up a series of
 memory mapped regions, which combine to make the input data region. */
typedef struct fd_exec_test_input_data_region {
    /* Offset from the start of the input data segment (0x400000000) */
    uint64_t offset;
    /* Content of the memory region */
    pb_bytes_array_t *content;
    /* If the memory region is writable or not */
    bool is_writable;
} fd_exec_test_input_data_region_t;

typedef PB_BYTES_ARRAY_T(1400) fd_exec_test_syscall_invocation_function_name_t;
/* A single invocation of a syscall */
typedef struct fd_exec_test_syscall_invocation {
    /* The sBPF function name of the syscall */
    fd_exec_test_syscall_invocation_function_name_t function_name;
    /* The initial portion of the heap, for example to store syscall inputs */
    pb_bytes_array_t *heap_prefix;
    /* The initial portion of the stack, for example to store syscall inputs */
    pb_bytes_array_t *stack_prefix;
} fd_exec_test_syscall_invocation_t;

/* The effects of executing a SyscallContext. */
typedef struct fd_exec_test_syscall_effects {
    /* EBPF error code, if the invocation was unsuccessful */
    int64_t error;
    /* Registers */
    uint64_t r0; /* Result of a successful execution */
    /* CU's remaining */
    uint64_t cu_avail;
    /* Memory regions */
    pb_bytes_array_t *heap;
    pb_bytes_array_t *stack;
    pb_bytes_array_t *inputdata; /* deprecated, use input_data_regions */
    /* Current number of stack frames pushed */
    uint64_t frame_count;
    /* Syscall log */
    pb_bytes_array_t *log;
    pb_bytes_array_t *rodata;
    /* VM state */
    uint64_t pc;
    pb_size_t input_data_regions_count;
    struct fd_exec_test_input_data_region *input_data_regions;
    /* Error Kind (should be used along with error code) */
    fd_exec_test_err_kind_t error_kind;
    /* Output registers (to test interpreter) */
    uint64_t r1;
    uint64_t r2;
    uint64_t r3;
    uint64_t r4;
    uint64_t r5;
    uint64_t r6;
    uint64_t r7;
    uint64_t r8;
    uint64_t r9;
    uint64_t r10;
} fd_exec_test_syscall_effects_t;

/* Effects of fd_vm_validate */
typedef struct fd_exec_test_validate_vm_effects {
    int32_t result;
    /* if result is 0 (success), protobuf will be empty!! */
    bool success;
} fd_exec_test_validate_vm_effects_t;

typedef struct fd_exec_test_return_data {
    pb_bytes_array_t *program_id;
    pb_bytes_array_t *data;
} fd_exec_test_return_data_t;

/* Information sufficient to allow the fuzzer to generate a fd_vm_t context for 
 execution inside the VM (excluding the instruction context).

 TODO: this currently only includes fields necessary for executing syscalls,
 executing sBPF code will require the rest of the fields in fd_vm_t to be set. */
typedef struct fd_exec_test_vm_context {
    /* Maximum heap size in bytes */
    uint64_t heap_max;
    /* Program read-only data */
    pb_bytes_array_t *rodata;
    /* Offset of the text section from the start of the program rodata segment
 (0x100000000) */
    uint64_t rodata_text_section_offset;
    /* Length of the text section in the program rodata region, in bytes. */
    uint64_t rodata_text_section_length;
    /* The input data regions */
    pb_size_t input_data_regions_count;
    struct fd_exec_test_input_data_region *input_data_regions;
    /* Registers */
    uint64_t r0;
    uint64_t r1;
    uint64_t r2;
    uint64_t r3;
    uint64_t r4;
    uint64_t r5;
    uint64_t r6;
    uint64_t r7;
    uint64_t r8;
    uint64_t r9;
    uint64_t r10;
    uint64_t r11;
    bool check_align;
    bool check_size;
    /* for vm execution */
    uint64_t entry_pc;
    /* Bitset of valid call destinations (in terms of pc).
This model is used by the Firedancer VM for CALL_IMMs */
    pb_bytes_array_t *call_whitelist;
    bool tracing_enabled;
    bool has_return_data;
    fd_exec_test_return_data_t return_data;
    /* SBPF version */
    uint32_t sbpf_version;
} fd_exec_test_vm_context_t;

/* Execution context for a VM Syscall execution. */
typedef struct fd_exec_test_syscall_context {
    bool has_vm_ctx;
    fd_exec_test_vm_context_t vm_ctx;
    /* InflightInstruction - contain temporary fields that live for the duration of an instructions execution, and is needed if we have overhanging context from a previous instruction */
    bool has_instr_ctx;
    fd_exec_test_instr_context_t instr_ctx;
    bool has_syscall_invocation;
    fd_exec_test_syscall_invocation_t syscall_invocation;
    /* For CPI, we want to control the effects of a program invocation */
    bool has_exec_effects;
    fd_exec_test_instr_effects_t exec_effects;
} fd_exec_test_syscall_context_t;

/* A syscall processing test fixture. */
typedef struct fd_exec_test_syscall_fixture {
    bool has_metadata;
    fd_exec_test_fixture_metadata_t metadata;
    bool has_input;
    fd_exec_test_syscall_context_t input;
    bool has_output;
    fd_exec_test_syscall_effects_t output;
} fd_exec_test_syscall_fixture_t;

/* Everything needed to setup a fd_vm_t */
typedef struct fd_exec_test_full_vm_context {
    bool has_vm_ctx;
    fd_exec_test_vm_context_t vm_ctx;
    /* InstrContext instr_ctx = 2; */
    bool has_features;
    fd_exec_test_feature_set_t features;
} fd_exec_test_full_vm_context_t;

/* Fixture for fd_vm_validate fuzz harness */
typedef struct fd_exec_test_validate_vm_fixture {
    bool has_metadata;
    fd_exec_test_fixture_metadata_t metadata;
    bool has_input;
    fd_exec_test_full_vm_context_t input;
    bool has_output;
    fd_exec_test_validate_vm_effects_t output;
} fd_exec_test_validate_vm_fixture_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _FD_EXEC_TEST_ERR_KIND_MIN FD_EXEC_TEST_ERR_KIND_UNSPECIFIED
#define _FD_EXEC_TEST_ERR_KIND_MAX FD_EXEC_TEST_ERR_KIND_INSTRUCTION
#define _FD_EXEC_TEST_ERR_KIND_ARRAYSIZE ((fd_exec_test_err_kind_t)(FD_EXEC_TEST_ERR_KIND_INSTRUCTION+1))





#define fd_exec_test_syscall_effects_t_error_kind_ENUMTYPE fd_exec_test_err_kind_t







/* Initializer values for message structs */
#define FD_EXEC_TEST_INPUT_DATA_REGION_INIT_DEFAULT {0, NULL, 0}
#define FD_EXEC_TEST_VM_CONTEXT_INIT_DEFAULT     {0, NULL, 0, 0, 0, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL, 0, false, FD_EXEC_TEST_RETURN_DATA_INIT_DEFAULT, 0}
#define FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_DEFAULT {{0, {0}}, NULL, NULL}
#define FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_DEFAULT {false, FD_EXEC_TEST_VM_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_INSTR_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_DEFAULT, false, FD_EXEC_TEST_INSTR_EFFECTS_INIT_DEFAULT}
#define FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_DEFAULT {0, 0, 0, NULL, NULL, NULL, 0, NULL, NULL, 0, 0, NULL, _FD_EXEC_TEST_ERR_KIND_MIN, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define FD_EXEC_TEST_SYSCALL_FIXTURE_INIT_DEFAULT {false, FD_EXEC_TEST_FIXTURE_METADATA_INIT_DEFAULT, false, FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_DEFAULT}
#define FD_EXEC_TEST_FULL_VM_CONTEXT_INIT_DEFAULT {false, FD_EXEC_TEST_VM_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_FEATURE_SET_INIT_DEFAULT}
#define FD_EXEC_TEST_VALIDATE_VM_EFFECTS_INIT_DEFAULT {0, 0}
#define FD_EXEC_TEST_VALIDATE_VM_FIXTURE_INIT_DEFAULT {false, FD_EXEC_TEST_FIXTURE_METADATA_INIT_DEFAULT, false, FD_EXEC_TEST_FULL_VM_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_VALIDATE_VM_EFFECTS_INIT_DEFAULT}
#define FD_EXEC_TEST_RETURN_DATA_INIT_DEFAULT    {NULL, NULL}
#define FD_EXEC_TEST_INPUT_DATA_REGION_INIT_ZERO {0, NULL, 0}
#define FD_EXEC_TEST_VM_CONTEXT_INIT_ZERO        {0, NULL, 0, 0, 0, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL, 0, false, FD_EXEC_TEST_RETURN_DATA_INIT_ZERO, 0}
#define FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_ZERO {{0, {0}}, NULL, NULL}
#define FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_ZERO   {false, FD_EXEC_TEST_VM_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_INSTR_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_ZERO, false, FD_EXEC_TEST_INSTR_EFFECTS_INIT_ZERO}
#define FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_ZERO   {0, 0, 0, NULL, NULL, NULL, 0, NULL, NULL, 0, 0, NULL, _FD_EXEC_TEST_ERR_KIND_MIN, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define FD_EXEC_TEST_SYSCALL_FIXTURE_INIT_ZERO   {false, FD_EXEC_TEST_FIXTURE_METADATA_INIT_ZERO, false, FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_ZERO}
#define FD_EXEC_TEST_FULL_VM_CONTEXT_INIT_ZERO   {false, FD_EXEC_TEST_VM_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_FEATURE_SET_INIT_ZERO}
#define FD_EXEC_TEST_VALIDATE_VM_EFFECTS_INIT_ZERO {0, 0}
#define FD_EXEC_TEST_VALIDATE_VM_FIXTURE_INIT_ZERO {false, FD_EXEC_TEST_FIXTURE_METADATA_INIT_ZERO, false, FD_EXEC_TEST_FULL_VM_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_VALIDATE_VM_EFFECTS_INIT_ZERO}
#define FD_EXEC_TEST_RETURN_DATA_INIT_ZERO       {NULL, NULL}

/* Field tags (for use in manual encoding/decoding) */
#define FD_EXEC_TEST_INPUT_DATA_REGION_OFFSET_TAG 1
#define FD_EXEC_TEST_INPUT_DATA_REGION_CONTENT_TAG 2
#define FD_EXEC_TEST_INPUT_DATA_REGION_IS_WRITABLE_TAG 3
#define FD_EXEC_TEST_SYSCALL_INVOCATION_FUNCTION_NAME_TAG 1
#define FD_EXEC_TEST_SYSCALL_INVOCATION_HEAP_PREFIX_TAG 2
#define FD_EXEC_TEST_SYSCALL_INVOCATION_STACK_PREFIX_TAG 3
#define FD_EXEC_TEST_SYSCALL_EFFECTS_ERROR_TAG   1
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R0_TAG      2
#define FD_EXEC_TEST_SYSCALL_EFFECTS_CU_AVAIL_TAG 3
#define FD_EXEC_TEST_SYSCALL_EFFECTS_HEAP_TAG    4
#define FD_EXEC_TEST_SYSCALL_EFFECTS_STACK_TAG   5
#define FD_EXEC_TEST_SYSCALL_EFFECTS_INPUTDATA_TAG 6
#define FD_EXEC_TEST_SYSCALL_EFFECTS_FRAME_COUNT_TAG 7
#define FD_EXEC_TEST_SYSCALL_EFFECTS_LOG_TAG     8
#define FD_EXEC_TEST_SYSCALL_EFFECTS_RODATA_TAG  9
#define FD_EXEC_TEST_SYSCALL_EFFECTS_PC_TAG      10
#define FD_EXEC_TEST_SYSCALL_EFFECTS_INPUT_DATA_REGIONS_TAG 11
#define FD_EXEC_TEST_SYSCALL_EFFECTS_ERROR_KIND_TAG 12
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R1_TAG      107
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R2_TAG      108
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R3_TAG      109
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R4_TAG      110
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R5_TAG      111
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R6_TAG      112
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R7_TAG      113
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R8_TAG      114
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R9_TAG      115
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R10_TAG     116
#define FD_EXEC_TEST_VALIDATE_VM_EFFECTS_RESULT_TAG 1
#define FD_EXEC_TEST_VALIDATE_VM_EFFECTS_SUCCESS_TAG 2
#define FD_EXEC_TEST_RETURN_DATA_PROGRAM_ID_TAG  1
#define FD_EXEC_TEST_RETURN_DATA_DATA_TAG        2
#define FD_EXEC_TEST_VM_CONTEXT_HEAP_MAX_TAG     1
#define FD_EXEC_TEST_VM_CONTEXT_RODATA_TAG       2
#define FD_EXEC_TEST_VM_CONTEXT_RODATA_TEXT_SECTION_OFFSET_TAG 3
#define FD_EXEC_TEST_VM_CONTEXT_RODATA_TEXT_SECTION_LENGTH_TAG 4
#define FD_EXEC_TEST_VM_CONTEXT_INPUT_DATA_REGIONS_TAG 5
#define FD_EXEC_TEST_VM_CONTEXT_R0_TAG           6
#define FD_EXEC_TEST_VM_CONTEXT_R1_TAG           7
#define FD_EXEC_TEST_VM_CONTEXT_R2_TAG           8
#define FD_EXEC_TEST_VM_CONTEXT_R3_TAG           9
#define FD_EXEC_TEST_VM_CONTEXT_R4_TAG           10
#define FD_EXEC_TEST_VM_CONTEXT_R5_TAG           11
#define FD_EXEC_TEST_VM_CONTEXT_R6_TAG           12
#define FD_EXEC_TEST_VM_CONTEXT_R7_TAG           13
#define FD_EXEC_TEST_VM_CONTEXT_R8_TAG           14
#define FD_EXEC_TEST_VM_CONTEXT_R9_TAG           15
#define FD_EXEC_TEST_VM_CONTEXT_R10_TAG          16
#define FD_EXEC_TEST_VM_CONTEXT_R11_TAG          17
#define FD_EXEC_TEST_VM_CONTEXT_CHECK_ALIGN_TAG  18
#define FD_EXEC_TEST_VM_CONTEXT_CHECK_SIZE_TAG   19
#define FD_EXEC_TEST_VM_CONTEXT_ENTRY_PC_TAG     20
#define FD_EXEC_TEST_VM_CONTEXT_CALL_WHITELIST_TAG 21
#define FD_EXEC_TEST_VM_CONTEXT_TRACING_ENABLED_TAG 22
#define FD_EXEC_TEST_VM_CONTEXT_RETURN_DATA_TAG  23
#define FD_EXEC_TEST_VM_CONTEXT_SBPF_VERSION_TAG 24
#define FD_EXEC_TEST_SYSCALL_CONTEXT_VM_CTX_TAG  1
#define FD_EXEC_TEST_SYSCALL_CONTEXT_INSTR_CTX_TAG 2
#define FD_EXEC_TEST_SYSCALL_CONTEXT_SYSCALL_INVOCATION_TAG 3
#define FD_EXEC_TEST_SYSCALL_CONTEXT_EXEC_EFFECTS_TAG 4
#define FD_EXEC_TEST_SYSCALL_FIXTURE_METADATA_TAG 1
#define FD_EXEC_TEST_SYSCALL_FIXTURE_INPUT_TAG   2
#define FD_EXEC_TEST_SYSCALL_FIXTURE_OUTPUT_TAG  3
#define FD_EXEC_TEST_FULL_VM_CONTEXT_VM_CTX_TAG  1
#define FD_EXEC_TEST_FULL_VM_CONTEXT_FEATURES_TAG 3
#define FD_EXEC_TEST_VALIDATE_VM_FIXTURE_METADATA_TAG 1
#define FD_EXEC_TEST_VALIDATE_VM_FIXTURE_INPUT_TAG 2
#define FD_EXEC_TEST_VALIDATE_VM_FIXTURE_OUTPUT_TAG 3

/* Struct field encoding specification for nanopb */
#define FD_EXEC_TEST_INPUT_DATA_REGION_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   offset,            1) \
X(a, POINTER,  SINGULAR, BYTES,    content,           2) \
X(a, STATIC,   SINGULAR, BOOL,     is_writable,       3)
#define FD_EXEC_TEST_INPUT_DATA_REGION_CALLBACK NULL
#define FD_EXEC_TEST_INPUT_DATA_REGION_DEFAULT NULL

#define FD_EXEC_TEST_VM_CONTEXT_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   heap_max,          1) \
X(a, POINTER,  SINGULAR, BYTES,    rodata,            2) \
X(a, STATIC,   SINGULAR, UINT64,   rodata_text_section_offset,   3) \
X(a, STATIC,   SINGULAR, UINT64,   rodata_text_section_length,   4) \
X(a, POINTER,  REPEATED, MESSAGE,  input_data_regions,   5) \
X(a, STATIC,   SINGULAR, UINT64,   r0,                6) \
X(a, STATIC,   SINGULAR, UINT64,   r1,                7) \
X(a, STATIC,   SINGULAR, UINT64,   r2,                8) \
X(a, STATIC,   SINGULAR, UINT64,   r3,                9) \
X(a, STATIC,   SINGULAR, UINT64,   r4,               10) \
X(a, STATIC,   SINGULAR, UINT64,   r5,               11) \
X(a, STATIC,   SINGULAR, UINT64,   r6,               12) \
X(a, STATIC,   SINGULAR, UINT64,   r7,               13) \
X(a, STATIC,   SINGULAR, UINT64,   r8,               14) \
X(a, STATIC,   SINGULAR, UINT64,   r9,               15) \
X(a, STATIC,   SINGULAR, UINT64,   r10,              16) \
X(a, STATIC,   SINGULAR, UINT64,   r11,              17) \
X(a, STATIC,   SINGULAR, BOOL,     check_align,      18) \
X(a, STATIC,   SINGULAR, BOOL,     check_size,       19) \
X(a, STATIC,   SINGULAR, UINT64,   entry_pc,         20) \
X(a, POINTER,  SINGULAR, BYTES,    call_whitelist,   21) \
X(a, STATIC,   SINGULAR, BOOL,     tracing_enabled,  22) \
X(a, STATIC,   OPTIONAL, MESSAGE,  return_data,      23) \
X(a, STATIC,   SINGULAR, UINT32,   sbpf_version,     24)
#define FD_EXEC_TEST_VM_CONTEXT_CALLBACK NULL
#define FD_EXEC_TEST_VM_CONTEXT_DEFAULT NULL
#define fd_exec_test_vm_context_t_input_data_regions_MSGTYPE fd_exec_test_input_data_region_t
#define fd_exec_test_vm_context_t_return_data_MSGTYPE fd_exec_test_return_data_t

#define FD_EXEC_TEST_SYSCALL_INVOCATION_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    function_name,     1) \
X(a, POINTER,  SINGULAR, BYTES,    heap_prefix,       2) \
X(a, POINTER,  SINGULAR, BYTES,    stack_prefix,      3)
#define FD_EXEC_TEST_SYSCALL_INVOCATION_CALLBACK NULL
#define FD_EXEC_TEST_SYSCALL_INVOCATION_DEFAULT NULL

#define FD_EXEC_TEST_SYSCALL_CONTEXT_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  vm_ctx,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  instr_ctx,         2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  syscall_invocation,   3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  exec_effects,      4)
#define FD_EXEC_TEST_SYSCALL_CONTEXT_CALLBACK NULL
#define FD_EXEC_TEST_SYSCALL_CONTEXT_DEFAULT NULL
#define fd_exec_test_syscall_context_t_vm_ctx_MSGTYPE fd_exec_test_vm_context_t
#define fd_exec_test_syscall_context_t_instr_ctx_MSGTYPE fd_exec_test_instr_context_t
#define fd_exec_test_syscall_context_t_syscall_invocation_MSGTYPE fd_exec_test_syscall_invocation_t
#define fd_exec_test_syscall_context_t_exec_effects_MSGTYPE fd_exec_test_instr_effects_t

#define FD_EXEC_TEST_SYSCALL_EFFECTS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    error,             1) \
X(a, STATIC,   SINGULAR, UINT64,   r0,                2) \
X(a, STATIC,   SINGULAR, UINT64,   cu_avail,          3) \
X(a, POINTER,  SINGULAR, BYTES,    heap,              4) \
X(a, POINTER,  SINGULAR, BYTES,    stack,             5) \
X(a, POINTER,  SINGULAR, BYTES,    inputdata,         6) \
X(a, STATIC,   SINGULAR, UINT64,   frame_count,       7) \
X(a, POINTER,  SINGULAR, BYTES,    log,               8) \
X(a, POINTER,  SINGULAR, BYTES,    rodata,            9) \
X(a, STATIC,   SINGULAR, UINT64,   pc,               10) \
X(a, POINTER,  REPEATED, MESSAGE,  input_data_regions,  11) \
X(a, STATIC,   SINGULAR, UENUM,    error_kind,       12) \
X(a, STATIC,   SINGULAR, UINT64,   r1,              107) \
X(a, STATIC,   SINGULAR, UINT64,   r2,              108) \
X(a, STATIC,   SINGULAR, UINT64,   r3,              109) \
X(a, STATIC,   SINGULAR, UINT64,   r4,              110) \
X(a, STATIC,   SINGULAR, UINT64,   r5,              111) \
X(a, STATIC,   SINGULAR, UINT64,   r6,              112) \
X(a, STATIC,   SINGULAR, UINT64,   r7,              113) \
X(a, STATIC,   SINGULAR, UINT64,   r8,              114) \
X(a, STATIC,   SINGULAR, UINT64,   r9,              115) \
X(a, STATIC,   SINGULAR, UINT64,   r10,             116)
#define FD_EXEC_TEST_SYSCALL_EFFECTS_CALLBACK NULL
#define FD_EXEC_TEST_SYSCALL_EFFECTS_DEFAULT NULL
#define fd_exec_test_syscall_effects_t_input_data_regions_MSGTYPE fd_exec_test_input_data_region_t

#define FD_EXEC_TEST_SYSCALL_FIXTURE_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  metadata,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  input,             2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  output,            3)
#define FD_EXEC_TEST_SYSCALL_FIXTURE_CALLBACK NULL
#define FD_EXEC_TEST_SYSCALL_FIXTURE_DEFAULT NULL
#define fd_exec_test_syscall_fixture_t_metadata_MSGTYPE fd_exec_test_fixture_metadata_t
#define fd_exec_test_syscall_fixture_t_input_MSGTYPE fd_exec_test_syscall_context_t
#define fd_exec_test_syscall_fixture_t_output_MSGTYPE fd_exec_test_syscall_effects_t

#define FD_EXEC_TEST_FULL_VM_CONTEXT_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  vm_ctx,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  features,          3)
#define FD_EXEC_TEST_FULL_VM_CONTEXT_CALLBACK NULL
#define FD_EXEC_TEST_FULL_VM_CONTEXT_DEFAULT NULL
#define fd_exec_test_full_vm_context_t_vm_ctx_MSGTYPE fd_exec_test_vm_context_t
#define fd_exec_test_full_vm_context_t_features_MSGTYPE fd_exec_test_feature_set_t

#define FD_EXEC_TEST_VALIDATE_VM_EFFECTS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    result,            1) \
X(a, STATIC,   SINGULAR, BOOL,     success,           2)
#define FD_EXEC_TEST_VALIDATE_VM_EFFECTS_CALLBACK NULL
#define FD_EXEC_TEST_VALIDATE_VM_EFFECTS_DEFAULT NULL

#define FD_EXEC_TEST_VALIDATE_VM_FIXTURE_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  metadata,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  input,             2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  output,            3)
#define FD_EXEC_TEST_VALIDATE_VM_FIXTURE_CALLBACK NULL
#define FD_EXEC_TEST_VALIDATE_VM_FIXTURE_DEFAULT NULL
#define fd_exec_test_validate_vm_fixture_t_metadata_MSGTYPE fd_exec_test_fixture_metadata_t
#define fd_exec_test_validate_vm_fixture_t_input_MSGTYPE fd_exec_test_full_vm_context_t
#define fd_exec_test_validate_vm_fixture_t_output_MSGTYPE fd_exec_test_validate_vm_effects_t

#define FD_EXEC_TEST_RETURN_DATA_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, BYTES,    program_id,        1) \
X(a, POINTER,  SINGULAR, BYTES,    data,              2)
#define FD_EXEC_TEST_RETURN_DATA_CALLBACK NULL
#define FD_EXEC_TEST_RETURN_DATA_DEFAULT NULL

extern const pb_msgdesc_t fd_exec_test_input_data_region_t_msg;
extern const pb_msgdesc_t fd_exec_test_vm_context_t_msg;
extern const pb_msgdesc_t fd_exec_test_syscall_invocation_t_msg;
extern const pb_msgdesc_t fd_exec_test_syscall_context_t_msg;
extern const pb_msgdesc_t fd_exec_test_syscall_effects_t_msg;
extern const pb_msgdesc_t fd_exec_test_syscall_fixture_t_msg;
extern const pb_msgdesc_t fd_exec_test_full_vm_context_t_msg;
extern const pb_msgdesc_t fd_exec_test_validate_vm_effects_t_msg;
extern const pb_msgdesc_t fd_exec_test_validate_vm_fixture_t_msg;
extern const pb_msgdesc_t fd_exec_test_return_data_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define FD_EXEC_TEST_INPUT_DATA_REGION_FIELDS &fd_exec_test_input_data_region_t_msg
#define FD_EXEC_TEST_VM_CONTEXT_FIELDS &fd_exec_test_vm_context_t_msg
#define FD_EXEC_TEST_SYSCALL_INVOCATION_FIELDS &fd_exec_test_syscall_invocation_t_msg
#define FD_EXEC_TEST_SYSCALL_CONTEXT_FIELDS &fd_exec_test_syscall_context_t_msg
#define FD_EXEC_TEST_SYSCALL_EFFECTS_FIELDS &fd_exec_test_syscall_effects_t_msg
#define FD_EXEC_TEST_SYSCALL_FIXTURE_FIELDS &fd_exec_test_syscall_fixture_t_msg
#define FD_EXEC_TEST_FULL_VM_CONTEXT_FIELDS &fd_exec_test_full_vm_context_t_msg
#define FD_EXEC_TEST_VALIDATE_VM_EFFECTS_FIELDS &fd_exec_test_validate_vm_effects_t_msg
#define FD_EXEC_TEST_VALIDATE_VM_FIXTURE_FIELDS &fd_exec_test_validate_vm_fixture_t_msg
#define FD_EXEC_TEST_RETURN_DATA_FIELDS &fd_exec_test_return_data_t_msg

/* Maximum encoded size of messages (where known) */
/* fd_exec_test_InputDataRegion_size depends on runtime parameters */
/* fd_exec_test_VmContext_size depends on runtime parameters */
/* fd_exec_test_SyscallInvocation_size depends on runtime parameters */
/* fd_exec_test_SyscallContext_size depends on runtime parameters */
/* fd_exec_test_SyscallEffects_size depends on runtime parameters */
/* fd_exec_test_SyscallFixture_size depends on runtime parameters */
/* fd_exec_test_FullVmContext_size depends on runtime parameters */
/* fd_exec_test_ValidateVmFixture_size depends on runtime parameters */
/* fd_exec_test_ReturnData_size depends on runtime parameters */
#define FD_EXEC_TEST_VALIDATE_VM_EFFECTS_SIZE    13
#define ORG_SOLANA_SEALEVEL_V1_VM_PB_H_MAX_SIZE  FD_EXEC_TEST_VALIDATE_VM_EFFECTS_SIZE

/* Mapping from canonical names (mangle_names or overridden package name) */
#define org_solana_sealevel_v1_ErrKind fd_exec_test_ErrKind
#define org_solana_sealevel_v1_InputDataRegion fd_exec_test_InputDataRegion
#define org_solana_sealevel_v1_VmContext fd_exec_test_VmContext
#define org_solana_sealevel_v1_SyscallInvocation fd_exec_test_SyscallInvocation
#define org_solana_sealevel_v1_SyscallContext fd_exec_test_SyscallContext
#define org_solana_sealevel_v1_SyscallEffects fd_exec_test_SyscallEffects
#define org_solana_sealevel_v1_SyscallFixture fd_exec_test_SyscallFixture
#define org_solana_sealevel_v1_FullVmContext fd_exec_test_FullVmContext
#define org_solana_sealevel_v1_ValidateVmEffects fd_exec_test_ValidateVmEffects
#define org_solana_sealevel_v1_ValidateVmFixture fd_exec_test_ValidateVmFixture
#define org_solana_sealevel_v1_ReturnData fd_exec_test_ReturnData
#define _ORG_SOLANA_SEALEVEL_V1_ERR_KIND_MIN _FD_EXEC_TEST_ERR_KIND_MIN
#define _ORG_SOLANA_SEALEVEL_V1_ERR_KIND_MAX _FD_EXEC_TEST_ERR_KIND_MAX
#define _ORG_SOLANA_SEALEVEL_V1_ERR_KIND_ARRAYSIZE _FD_EXEC_TEST_ERR_KIND_ARRAYSIZE
#define ORG_SOLANA_SEALEVEL_V1_INPUT_DATA_REGION_INIT_DEFAULT FD_EXEC_TEST_INPUT_DATA_REGION_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_VM_CONTEXT_INIT_DEFAULT FD_EXEC_TEST_VM_CONTEXT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_INVOCATION_INIT_DEFAULT FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_CONTEXT_INIT_DEFAULT FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_EFFECTS_INIT_DEFAULT FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_FIXTURE_INIT_DEFAULT FD_EXEC_TEST_SYSCALL_FIXTURE_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_FULL_VM_CONTEXT_INIT_DEFAULT FD_EXEC_TEST_FULL_VM_CONTEXT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_VALIDATE_VM_EFFECTS_INIT_DEFAULT FD_EXEC_TEST_VALIDATE_VM_EFFECTS_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_VALIDATE_VM_FIXTURE_INIT_DEFAULT FD_EXEC_TEST_VALIDATE_VM_FIXTURE_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_RETURN_DATA_INIT_DEFAULT FD_EXEC_TEST_RETURN_DATA_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_INPUT_DATA_REGION_INIT_ZERO FD_EXEC_TEST_INPUT_DATA_REGION_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_VM_CONTEXT_INIT_ZERO FD_EXEC_TEST_VM_CONTEXT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_INVOCATION_INIT_ZERO FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_CONTEXT_INIT_ZERO FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_EFFECTS_INIT_ZERO FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_FIXTURE_INIT_ZERO FD_EXEC_TEST_SYSCALL_FIXTURE_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_FULL_VM_CONTEXT_INIT_ZERO FD_EXEC_TEST_FULL_VM_CONTEXT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_VALIDATE_VM_EFFECTS_INIT_ZERO FD_EXEC_TEST_VALIDATE_VM_EFFECTS_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_VALIDATE_VM_FIXTURE_INIT_ZERO FD_EXEC_TEST_VALIDATE_VM_FIXTURE_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_RETURN_DATA_INIT_ZERO FD_EXEC_TEST_RETURN_DATA_INIT_ZERO

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
