/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_ORG_SOLANA_SEALEVEL_V1_BLOCK_PB_H_INCLUDED
#define PB_ORG_SOLANA_SEALEVEL_V1_BLOCK_PB_H_INCLUDED

#include "../../../nanopb/pb_firedancer.h"
#include "context.pb.h"
#include "txn.pb.h"
#include "metadata.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* A microblock may or may not contain several transactions. If a microblock
 contains no transactions, it's called a "tick" */
typedef struct fd_exec_test_microblock {
    /* All transactions in this microblock (can be 0) */
    pb_size_t txns_count;
    struct fd_exec_test_sanitized_transaction *txns;
} fd_exec_test_microblock_t;

typedef struct fd_exec_test_block_context {
    /* Microblocks in this block */
    pb_size_t microblocks_count;
    struct fd_exec_test_microblock *microblocks;
    /* Input account states */
    pb_size_t acct_states_count;
    struct fd_exec_test_acct_state *acct_states;
    /* The blockhash queue */
    pb_size_t blockhash_queue_count;
    pb_bytes_array_t **blockhash_queue;
    /* Slot context (contains slot number) */
    bool has_slot_ctx;
    fd_exec_test_slot_context_t slot_ctx;
    /* Epoch context (contains feature info) */
    bool has_epoch_ctx;
    fd_exec_test_epoch_context_t epoch_ctx;
} fd_exec_test_block_context_t;

typedef struct fd_exec_test_block_effects {
    /* If block execution failed */
    bool has_error;
    /* Resulting account states */
    pb_size_t acct_states_count;
    struct fd_exec_test_acct_state *acct_states;
    /* Slot capitalization */
    uint64_t slot_capitalization;
    /* Bank hash */
    pb_byte_t bank_hash[32];
    /* Accounts lattice hash */
    pb_byte_t lt_hash[32];
    /* Account delta hash */
    pb_byte_t account_delta_hash[32];
} fd_exec_test_block_effects_t;

typedef struct fd_exec_test_block_fixture {
    bool has_metadata;
    fd_exec_test_fixture_metadata_t metadata;
    /* The block input */
    bool has_input;
    fd_exec_test_block_context_t input;
    /* The output */
    bool has_output;
    fd_exec_test_block_effects_t output;
} fd_exec_test_block_fixture_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define FD_EXEC_TEST_MICROBLOCK_INIT_DEFAULT     {0, NULL}
#define FD_EXEC_TEST_BLOCK_CONTEXT_INIT_DEFAULT  {0, NULL, 0, NULL, 0, NULL, false, FD_EXEC_TEST_SLOT_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_EPOCH_CONTEXT_INIT_DEFAULT}
#define FD_EXEC_TEST_BLOCK_EFFECTS_INIT_DEFAULT  {0, 0, NULL, 0, {0}, {0}, {0}}
#define FD_EXEC_TEST_BLOCK_FIXTURE_INIT_DEFAULT  {false, FD_EXEC_TEST_FIXTURE_METADATA_INIT_DEFAULT, false, FD_EXEC_TEST_BLOCK_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_BLOCK_EFFECTS_INIT_DEFAULT}
#define FD_EXEC_TEST_MICROBLOCK_INIT_ZERO        {0, NULL}
#define FD_EXEC_TEST_BLOCK_CONTEXT_INIT_ZERO     {0, NULL, 0, NULL, 0, NULL, false, FD_EXEC_TEST_SLOT_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_EPOCH_CONTEXT_INIT_ZERO}
#define FD_EXEC_TEST_BLOCK_EFFECTS_INIT_ZERO     {0, 0, NULL, 0, {0}, {0}, {0}}
#define FD_EXEC_TEST_BLOCK_FIXTURE_INIT_ZERO     {false, FD_EXEC_TEST_FIXTURE_METADATA_INIT_ZERO, false, FD_EXEC_TEST_BLOCK_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_BLOCK_EFFECTS_INIT_ZERO}

/* Field tags (for use in manual encoding/decoding) */
#define FD_EXEC_TEST_MICROBLOCK_TXNS_TAG         1
#define FD_EXEC_TEST_BLOCK_CONTEXT_MICROBLOCKS_TAG 1
#define FD_EXEC_TEST_BLOCK_CONTEXT_ACCT_STATES_TAG 2
#define FD_EXEC_TEST_BLOCK_CONTEXT_BLOCKHASH_QUEUE_TAG 3
#define FD_EXEC_TEST_BLOCK_CONTEXT_SLOT_CTX_TAG  4
#define FD_EXEC_TEST_BLOCK_CONTEXT_EPOCH_CTX_TAG 5
#define FD_EXEC_TEST_BLOCK_EFFECTS_HAS_ERROR_TAG 1
#define FD_EXEC_TEST_BLOCK_EFFECTS_ACCT_STATES_TAG 2
#define FD_EXEC_TEST_BLOCK_EFFECTS_SLOT_CAPITALIZATION_TAG 3
#define FD_EXEC_TEST_BLOCK_EFFECTS_BANK_HASH_TAG 4
#define FD_EXEC_TEST_BLOCK_EFFECTS_LT_HASH_TAG   5
#define FD_EXEC_TEST_BLOCK_EFFECTS_ACCOUNT_DELTA_HASH_TAG 6
#define FD_EXEC_TEST_BLOCK_FIXTURE_METADATA_TAG  1
#define FD_EXEC_TEST_BLOCK_FIXTURE_INPUT_TAG     2
#define FD_EXEC_TEST_BLOCK_FIXTURE_OUTPUT_TAG    3

/* Struct field encoding specification for nanopb */
#define FD_EXEC_TEST_MICROBLOCK_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  txns,              1)
#define FD_EXEC_TEST_MICROBLOCK_CALLBACK NULL
#define FD_EXEC_TEST_MICROBLOCK_DEFAULT NULL
#define fd_exec_test_microblock_t_txns_MSGTYPE fd_exec_test_sanitized_transaction_t

#define FD_EXEC_TEST_BLOCK_CONTEXT_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  microblocks,       1) \
X(a, POINTER,  REPEATED, MESSAGE,  acct_states,       2) \
X(a, POINTER,  REPEATED, BYTES,    blockhash_queue,   3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  slot_ctx,          4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  epoch_ctx,         5)
#define FD_EXEC_TEST_BLOCK_CONTEXT_CALLBACK NULL
#define FD_EXEC_TEST_BLOCK_CONTEXT_DEFAULT NULL
#define fd_exec_test_block_context_t_microblocks_MSGTYPE fd_exec_test_microblock_t
#define fd_exec_test_block_context_t_acct_states_MSGTYPE fd_exec_test_acct_state_t
#define fd_exec_test_block_context_t_slot_ctx_MSGTYPE fd_exec_test_slot_context_t
#define fd_exec_test_block_context_t_epoch_ctx_MSGTYPE fd_exec_test_epoch_context_t

#define FD_EXEC_TEST_BLOCK_EFFECTS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     has_error,         1) \
X(a, POINTER,  REPEATED, MESSAGE,  acct_states,       2) \
X(a, STATIC,   SINGULAR, UINT64,   slot_capitalization,   3) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, bank_hash,         4) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, lt_hash,           5) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, account_delta_hash,   6)
#define FD_EXEC_TEST_BLOCK_EFFECTS_CALLBACK NULL
#define FD_EXEC_TEST_BLOCK_EFFECTS_DEFAULT NULL
#define fd_exec_test_block_effects_t_acct_states_MSGTYPE fd_exec_test_acct_state_t

#define FD_EXEC_TEST_BLOCK_FIXTURE_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  metadata,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  input,             2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  output,            3)
#define FD_EXEC_TEST_BLOCK_FIXTURE_CALLBACK NULL
#define FD_EXEC_TEST_BLOCK_FIXTURE_DEFAULT NULL
#define fd_exec_test_block_fixture_t_metadata_MSGTYPE fd_exec_test_fixture_metadata_t
#define fd_exec_test_block_fixture_t_input_MSGTYPE fd_exec_test_block_context_t
#define fd_exec_test_block_fixture_t_output_MSGTYPE fd_exec_test_block_effects_t

extern const pb_msgdesc_t fd_exec_test_microblock_t_msg;
extern const pb_msgdesc_t fd_exec_test_block_context_t_msg;
extern const pb_msgdesc_t fd_exec_test_block_effects_t_msg;
extern const pb_msgdesc_t fd_exec_test_block_fixture_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define FD_EXEC_TEST_MICROBLOCK_FIELDS &fd_exec_test_microblock_t_msg
#define FD_EXEC_TEST_BLOCK_CONTEXT_FIELDS &fd_exec_test_block_context_t_msg
#define FD_EXEC_TEST_BLOCK_EFFECTS_FIELDS &fd_exec_test_block_effects_t_msg
#define FD_EXEC_TEST_BLOCK_FIXTURE_FIELDS &fd_exec_test_block_fixture_t_msg

/* Maximum encoded size of messages (where known) */
/* fd_exec_test_Microblock_size depends on runtime parameters */
/* fd_exec_test_BlockContext_size depends on runtime parameters */
/* fd_exec_test_BlockEffects_size depends on runtime parameters */
/* fd_exec_test_BlockFixture_size depends on runtime parameters */

/* Mapping from canonical names (mangle_names or overridden package name) */
#define org_solana_sealevel_v1_Microblock fd_exec_test_Microblock
#define org_solana_sealevel_v1_BlockContext fd_exec_test_BlockContext
#define org_solana_sealevel_v1_BlockEffects fd_exec_test_BlockEffects
#define org_solana_sealevel_v1_BlockFixture fd_exec_test_BlockFixture
#define ORG_SOLANA_SEALEVEL_V1_MICROBLOCK_INIT_DEFAULT FD_EXEC_TEST_MICROBLOCK_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_BLOCK_CONTEXT_INIT_DEFAULT FD_EXEC_TEST_BLOCK_CONTEXT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_BLOCK_EFFECTS_INIT_DEFAULT FD_EXEC_TEST_BLOCK_EFFECTS_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_BLOCK_FIXTURE_INIT_DEFAULT FD_EXEC_TEST_BLOCK_FIXTURE_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_MICROBLOCK_INIT_ZERO FD_EXEC_TEST_MICROBLOCK_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_BLOCK_CONTEXT_INIT_ZERO FD_EXEC_TEST_BLOCK_CONTEXT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_BLOCK_EFFECTS_INIT_ZERO FD_EXEC_TEST_BLOCK_EFFECTS_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_BLOCK_FIXTURE_INIT_ZERO FD_EXEC_TEST_BLOCK_FIXTURE_INIT_ZERO

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
