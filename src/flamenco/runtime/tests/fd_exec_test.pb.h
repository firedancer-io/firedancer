/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_ORG_SOLANA_SEALEVEL_V1_FD_EXEC_TEST_PB_H_INCLUDED
#define PB_ORG_SOLANA_SEALEVEL_V1_FD_EXEC_TEST_PB_H_INCLUDED

#include "../../nanopb/pb_firedancer.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* A set of feature flags. */
typedef struct fd_exec_test_feature_set {
    /* Every item in this list marks an enabled feature.  The value of
 each item is the first 8 bytes of the feature ID as a little-
 endian integer. */
    pb_size_t features_count;
    uint64_t *features;
} fd_exec_test_feature_set_t;

/* The complete state of an account excluding its public key. */
typedef struct fd_exec_test_acct_state {
    /* The account key. Can be ommitted if obvious from the context. */
    bool has_address;
    pb_byte_t address[32];
    bool has_lamports;
    uint64_t lamports;
    pb_bytes_array_t *data;
    bool has_executable;
    bool executable;
    bool has_rent_epoch;
    uint64_t rent_epoch;
    bool has_owner;
    pb_byte_t owner[32];
} fd_exec_test_acct_state_t;

/* EpochContext includes context scoped to an epoch.
 On "real" ledgers, it is created during the epoch boundary. */
typedef struct fd_exec_test_epoch_context {
    bool has_features;
    fd_exec_test_feature_set_t features;
} fd_exec_test_epoch_context_t;

/* SlotContext includes context scoped to a block.
 On "real" ledgers, it is created during the slot boundary. */
typedef struct fd_exec_test_slot_context {
    char dummy_field;
} fd_exec_test_slot_context_t;

typedef struct fd_exec_test_txn_context {
    char dummy_field;
} fd_exec_test_txn_context_t;

typedef struct fd_exec_test_instr_acct {
    /* Selects an account in an external list */
    bool has_index;
    uint32_t index;
    bool has_is_writable;
    bool is_writable;
    bool has_is_signer;
    bool is_signer;
} fd_exec_test_instr_acct_t;

/* The execution context of a program invocation (aka instruction).
 Contains all information to independently replay an instruction.
 Also includes partial transaction context. */
typedef struct fd_exec_test_instr_context {
    /* The address of the program invoked.  (32 bytes) */
    bool has_program_id;
    pb_byte_t program_id[32];
    /* The address of the program loader if the invoked program is a user
 deployed program. */
    bool has_loader_id;
    pb_byte_t loader_id[32];
    /* Account state accessed by the instruction. */
    pb_size_t accounts_count;
    struct fd_exec_test_acct_state *accounts;
    /* Account access list for this instruction (refers to above accounts list) */
    pb_size_t instr_accounts_count;
    struct fd_exec_test_instr_acct *instr_accounts;
    /* The input data passed to program execution. */
    pb_bytes_array_t *data;
    bool has_cu_avail;
    uint64_t cu_avail;
    bool has_txn_context;
    fd_exec_test_txn_context_t txn_context;
    bool has_slot_context;
    fd_exec_test_slot_context_t slot_context;
    bool has_epoch_context;
    fd_exec_test_epoch_context_t epoch_context;
} fd_exec_test_instr_context_t;

/* The results of executing an InstrContext. */
typedef struct fd_exec_test_instr_effects {
    /* result is zero if the instruction executed succesfully.
 Otherwise, a non-zero error code.  Error codes are implementation
 defined. */
    int32_t result;
    /* Some error cases additionally have a custom error code.  Unlike
 the expected_result, this is stable across clients. */
    bool has_custom_err;
    uint32_t custom_err;
    /* Copies of accounts that were changed.  May be in an arbitrary
 order.  The pubkey of each account is unique in this list.  Each
 account address modified here must also be in the
 InstrContext. */
    pb_size_t modified_accounts_count;
    struct fd_exec_test_acct_state *modified_accounts;
    uint64_t cu_avail;
    /* Instruction return data. */
    pb_bytes_array_t *return_data;
} fd_exec_test_instr_effects_t;

/* An instruction processing test fixture. */
typedef struct fd_exec_test_instr_fixture {
    bool has_input;
    fd_exec_test_instr_context_t input;
    bool has_output;
    fd_exec_test_instr_effects_t output;
} fd_exec_test_instr_fixture_t;

/* Describes an input data region. Agave's memory mapping sets up a series of
 memory mapped regions, which combine to make the input data region. */
typedef struct fd_exec_test_input_data_region {
    /* Offset from the start of the input data segment (0x400000000) */
    uint64_t offset;
    /* Content of the memory region */
    pb_bytes_array_t *content;
    /* If the memory region is writable or not */
    bool is_writable;
} fd_exec_test_input_data_region_t;

/* Information sufficient to allow the fuzzer to generate a fd_vm_t context for 
 execution inside the VM (excluding the instruction context).

 TODO: this currently only includes fields necessary for executing syscalls,
 executing sBPF code will require the rest of the fields in fd_vm_t to be set. */
typedef struct fd_exec_test_vm_context {
    /* Maximum heap size in bytes */
    uint64_t heap_max;
    /* Program read-only data */
    pb_bytes_array_t *rodata;
    /* Offset of the text section from the start of the program rodata segment
 (0x100000000) */
    uint64_t rodata_text_section_offset;
    /* Length of the text section in the program rodata region, in bytes. */
    uint64_t rodata_text_section_length;
    /* The input data regions */
    pb_size_t input_data_regions_count;
    struct fd_exec_test_input_data_region *input_data_regions;
    /* Registers */
    uint64_t r0;
    uint64_t r1;
    uint64_t r2;
    uint64_t r3;
    uint64_t r4;
    uint64_t r5;
    uint64_t r6;
    uint64_t r7;
    uint64_t r8;
    uint64_t r9;
    uint64_t r10;
    uint64_t r11;
} fd_exec_test_vm_context_t;

/* A single invocation of a syscall */
typedef struct fd_exec_test_syscall_invocation {
    /* The sBPF function name of the syscall */
    char function_name[1400];
    /* The initial portion of the heap, for example to store syscall inputs */
    pb_bytes_array_t *heap_prefix;
} fd_exec_test_syscall_invocation_t;

/* Execution context for a VM Syscall execution. */
typedef struct fd_exec_test_syscall_context {
    bool has_vm_ctx;
    fd_exec_test_vm_context_t vm_ctx;
    /* InflightInstruction - contain temporary fields that live for the duration of an instructions execution, and is needed if we have overhanging context from a previous instruction */
    bool has_instr_ctx;
    fd_exec_test_instr_context_t instr_ctx;
    bool has_syscall_invocation;
    fd_exec_test_syscall_invocation_t syscall_invocation;
} fd_exec_test_syscall_context_t;

/* The effects of executing a SyscallContext. */
typedef struct fd_exec_test_syscall_effects {
    /* EBPF error code, if the invocation was unsuccessful */
    int64_t error;
    /* Registers */
    uint64_t r0; /* Result of a successful execution */
    /* CU's remaining */
    uint64_t cu_avail;
    /* Memory regions */
    pb_bytes_array_t *heap;
    pb_bytes_array_t *stack;
    pb_bytes_array_t *inputdata;
    /* Current number of stack frames pushed */
    uint64_t frame_count;
    /* Syscall log */
    pb_bytes_array_t *log;
} fd_exec_test_syscall_effects_t;

/* A syscall processing test fixture. */
typedef struct fd_exec_test_syscall_fixture {
    bool has_input;
    fd_exec_test_syscall_context_t input;
    bool has_output;
    fd_exec_test_syscall_effects_t output;
} fd_exec_test_syscall_fixture_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define FD_EXEC_TEST_FEATURE_SET_INIT_DEFAULT    {0, NULL}
#define FD_EXEC_TEST_ACCT_STATE_INIT_DEFAULT     {false, {0}, false, 0, NULL, false, 0, false, 0, false, {0}}
#define FD_EXEC_TEST_EPOCH_CONTEXT_INIT_DEFAULT  {false, FD_EXEC_TEST_FEATURE_SET_INIT_DEFAULT}
#define FD_EXEC_TEST_SLOT_CONTEXT_INIT_DEFAULT   {0}
#define FD_EXEC_TEST_TXN_CONTEXT_INIT_DEFAULT    {0}
#define FD_EXEC_TEST_INSTR_ACCT_INIT_DEFAULT     {false, 0, false, 0, false, 0}
#define FD_EXEC_TEST_INSTR_CONTEXT_INIT_DEFAULT  {false, {0}, false, {0}, 0, NULL, 0, NULL, NULL, false, 0, false, FD_EXEC_TEST_TXN_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_SLOT_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_EPOCH_CONTEXT_INIT_DEFAULT}
#define FD_EXEC_TEST_INSTR_EFFECTS_INIT_DEFAULT  {0, false, 0, 0, NULL, 0, NULL}
#define FD_EXEC_TEST_INSTR_FIXTURE_INIT_DEFAULT  {false, FD_EXEC_TEST_INSTR_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_INSTR_EFFECTS_INIT_DEFAULT}
#define FD_EXEC_TEST_INPUT_DATA_REGION_INIT_DEFAULT {0, NULL, 0}
#define FD_EXEC_TEST_VM_CONTEXT_INIT_DEFAULT     {0, NULL, 0, 0, 0, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_DEFAULT {"", NULL}
#define FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_DEFAULT {false, FD_EXEC_TEST_VM_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_INSTR_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_DEFAULT}
#define FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_DEFAULT {0, 0, 0, NULL, NULL, NULL, 0, NULL}
#define FD_EXEC_TEST_SYSCALL_FIXTURE_INIT_DEFAULT {false, FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_DEFAULT, false, FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_DEFAULT}
#define FD_EXEC_TEST_FEATURE_SET_INIT_ZERO       {0, NULL}
#define FD_EXEC_TEST_ACCT_STATE_INIT_ZERO        {false, {0}, false, 0, NULL, false, 0, false, 0, false, {0}}
#define FD_EXEC_TEST_EPOCH_CONTEXT_INIT_ZERO     {false, FD_EXEC_TEST_FEATURE_SET_INIT_ZERO}
#define FD_EXEC_TEST_SLOT_CONTEXT_INIT_ZERO      {0}
#define FD_EXEC_TEST_TXN_CONTEXT_INIT_ZERO       {0}
#define FD_EXEC_TEST_INSTR_ACCT_INIT_ZERO        {false, 0, false, 0, false, 0}
#define FD_EXEC_TEST_INSTR_CONTEXT_INIT_ZERO     {false, {0}, false, {0}, 0, NULL, 0, NULL, NULL, false, 0, false, FD_EXEC_TEST_TXN_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_SLOT_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_EPOCH_CONTEXT_INIT_ZERO}
#define FD_EXEC_TEST_INSTR_EFFECTS_INIT_ZERO     {0, false, 0, 0, NULL, 0, NULL}
#define FD_EXEC_TEST_INSTR_FIXTURE_INIT_ZERO     {false, FD_EXEC_TEST_INSTR_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_INSTR_EFFECTS_INIT_ZERO}
#define FD_EXEC_TEST_INPUT_DATA_REGION_INIT_ZERO {0, NULL, 0}
#define FD_EXEC_TEST_VM_CONTEXT_INIT_ZERO        {0, NULL, 0, 0, 0, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_ZERO {"", NULL}
#define FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_ZERO   {false, FD_EXEC_TEST_VM_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_INSTR_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_ZERO}
#define FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_ZERO   {0, 0, 0, NULL, NULL, NULL, 0, NULL}
#define FD_EXEC_TEST_SYSCALL_FIXTURE_INIT_ZERO   {false, FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_ZERO, false, FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_ZERO}

/* Field tags (for use in manual encoding/decoding) */
#define FD_EXEC_TEST_FEATURE_SET_FEATURES_TAG    1
#define FD_EXEC_TEST_ACCT_STATE_ADDRESS_TAG      1
#define FD_EXEC_TEST_ACCT_STATE_LAMPORTS_TAG     2
#define FD_EXEC_TEST_ACCT_STATE_DATA_TAG         3
#define FD_EXEC_TEST_ACCT_STATE_EXECUTABLE_TAG   4
#define FD_EXEC_TEST_ACCT_STATE_RENT_EPOCH_TAG   5
#define FD_EXEC_TEST_ACCT_STATE_OWNER_TAG        6
#define FD_EXEC_TEST_EPOCH_CONTEXT_FEATURES_TAG  1
#define FD_EXEC_TEST_INSTR_ACCT_INDEX_TAG        1
#define FD_EXEC_TEST_INSTR_ACCT_IS_WRITABLE_TAG  2
#define FD_EXEC_TEST_INSTR_ACCT_IS_SIGNER_TAG    3
#define FD_EXEC_TEST_INSTR_CONTEXT_PROGRAM_ID_TAG 1
#define FD_EXEC_TEST_INSTR_CONTEXT_LOADER_ID_TAG 2
#define FD_EXEC_TEST_INSTR_CONTEXT_ACCOUNTS_TAG  3
#define FD_EXEC_TEST_INSTR_CONTEXT_INSTR_ACCOUNTS_TAG 4
#define FD_EXEC_TEST_INSTR_CONTEXT_DATA_TAG      5
#define FD_EXEC_TEST_INSTR_CONTEXT_CU_AVAIL_TAG  6
#define FD_EXEC_TEST_INSTR_CONTEXT_TXN_CONTEXT_TAG 7
#define FD_EXEC_TEST_INSTR_CONTEXT_SLOT_CONTEXT_TAG 8
#define FD_EXEC_TEST_INSTR_CONTEXT_EPOCH_CONTEXT_TAG 9
#define FD_EXEC_TEST_INSTR_EFFECTS_RESULT_TAG    1
#define FD_EXEC_TEST_INSTR_EFFECTS_CUSTOM_ERR_TAG 2
#define FD_EXEC_TEST_INSTR_EFFECTS_MODIFIED_ACCOUNTS_TAG 3
#define FD_EXEC_TEST_INSTR_EFFECTS_CU_AVAIL_TAG  4
#define FD_EXEC_TEST_INSTR_EFFECTS_RETURN_DATA_TAG 5
#define FD_EXEC_TEST_INSTR_FIXTURE_INPUT_TAG     1
#define FD_EXEC_TEST_INSTR_FIXTURE_OUTPUT_TAG    2
#define FD_EXEC_TEST_INPUT_DATA_REGION_OFFSET_TAG 1
#define FD_EXEC_TEST_INPUT_DATA_REGION_CONTENT_TAG 2
#define FD_EXEC_TEST_INPUT_DATA_REGION_IS_WRITABLE_TAG 3
#define FD_EXEC_TEST_VM_CONTEXT_HEAP_MAX_TAG     1
#define FD_EXEC_TEST_VM_CONTEXT_RODATA_TAG       2
#define FD_EXEC_TEST_VM_CONTEXT_RODATA_TEXT_SECTION_OFFSET_TAG 3
#define FD_EXEC_TEST_VM_CONTEXT_RODATA_TEXT_SECTION_LENGTH_TAG 4
#define FD_EXEC_TEST_VM_CONTEXT_INPUT_DATA_REGIONS_TAG 5
#define FD_EXEC_TEST_VM_CONTEXT_R0_TAG           6
#define FD_EXEC_TEST_VM_CONTEXT_R1_TAG           7
#define FD_EXEC_TEST_VM_CONTEXT_R2_TAG           8
#define FD_EXEC_TEST_VM_CONTEXT_R3_TAG           9
#define FD_EXEC_TEST_VM_CONTEXT_R4_TAG           10
#define FD_EXEC_TEST_VM_CONTEXT_R5_TAG           11
#define FD_EXEC_TEST_VM_CONTEXT_R6_TAG           12
#define FD_EXEC_TEST_VM_CONTEXT_R7_TAG           13
#define FD_EXEC_TEST_VM_CONTEXT_R8_TAG           14
#define FD_EXEC_TEST_VM_CONTEXT_R9_TAG           15
#define FD_EXEC_TEST_VM_CONTEXT_R10_TAG          16
#define FD_EXEC_TEST_VM_CONTEXT_R11_TAG          17
#define FD_EXEC_TEST_SYSCALL_INVOCATION_FUNCTION_NAME_TAG 1
#define FD_EXEC_TEST_SYSCALL_INVOCATION_HEAP_PREFIX_TAG 2
#define FD_EXEC_TEST_SYSCALL_CONTEXT_VM_CTX_TAG  1
#define FD_EXEC_TEST_SYSCALL_CONTEXT_INSTR_CTX_TAG 2
#define FD_EXEC_TEST_SYSCALL_CONTEXT_SYSCALL_INVOCATION_TAG 3
#define FD_EXEC_TEST_SYSCALL_EFFECTS_ERROR_TAG   1
#define FD_EXEC_TEST_SYSCALL_EFFECTS_R0_TAG      2
#define FD_EXEC_TEST_SYSCALL_EFFECTS_CU_AVAIL_TAG 3
#define FD_EXEC_TEST_SYSCALL_EFFECTS_HEAP_TAG    4
#define FD_EXEC_TEST_SYSCALL_EFFECTS_STACK_TAG   5
#define FD_EXEC_TEST_SYSCALL_EFFECTS_INPUTDATA_TAG 6
#define FD_EXEC_TEST_SYSCALL_EFFECTS_FRAME_COUNT_TAG 7
#define FD_EXEC_TEST_SYSCALL_EFFECTS_LOG_TAG     8
#define FD_EXEC_TEST_SYSCALL_FIXTURE_INPUT_TAG   1
#define FD_EXEC_TEST_SYSCALL_FIXTURE_OUTPUT_TAG  2

/* Struct field encoding specification for nanopb */
#define FD_EXEC_TEST_FEATURE_SET_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, FIXED64,  features,          1)
#define FD_EXEC_TEST_FEATURE_SET_CALLBACK NULL
#define FD_EXEC_TEST_FEATURE_SET_DEFAULT NULL

#define FD_EXEC_TEST_ACCT_STATE_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FIXED_LENGTH_BYTES, address,           1) \
X(a, STATIC,   OPTIONAL, UINT64,   lamports,          2) \
X(a, POINTER,  OPTIONAL, BYTES,    data,              3) \
X(a, STATIC,   OPTIONAL, BOOL,     executable,        4) \
X(a, STATIC,   OPTIONAL, UINT64,   rent_epoch,        5) \
X(a, STATIC,   OPTIONAL, FIXED_LENGTH_BYTES, owner,             6)
#define FD_EXEC_TEST_ACCT_STATE_CALLBACK NULL
#define FD_EXEC_TEST_ACCT_STATE_DEFAULT NULL

#define FD_EXEC_TEST_EPOCH_CONTEXT_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  features,          1)
#define FD_EXEC_TEST_EPOCH_CONTEXT_CALLBACK NULL
#define FD_EXEC_TEST_EPOCH_CONTEXT_DEFAULT NULL
#define fd_exec_test_epoch_context_t_features_MSGTYPE fd_exec_test_feature_set_t

#define FD_EXEC_TEST_SLOT_CONTEXT_FIELDLIST(X, a) \

#define FD_EXEC_TEST_SLOT_CONTEXT_CALLBACK NULL
#define FD_EXEC_TEST_SLOT_CONTEXT_DEFAULT NULL

#define FD_EXEC_TEST_TXN_CONTEXT_FIELDLIST(X, a) \

#define FD_EXEC_TEST_TXN_CONTEXT_CALLBACK NULL
#define FD_EXEC_TEST_TXN_CONTEXT_DEFAULT NULL

#define FD_EXEC_TEST_INSTR_ACCT_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   index,             1) \
X(a, STATIC,   OPTIONAL, BOOL,     is_writable,       2) \
X(a, STATIC,   OPTIONAL, BOOL,     is_signer,         3)
#define FD_EXEC_TEST_INSTR_ACCT_CALLBACK NULL
#define FD_EXEC_TEST_INSTR_ACCT_DEFAULT NULL

#define FD_EXEC_TEST_INSTR_CONTEXT_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FIXED_LENGTH_BYTES, program_id,        1) \
X(a, STATIC,   OPTIONAL, FIXED_LENGTH_BYTES, loader_id,         2) \
X(a, POINTER,  REPEATED, MESSAGE,  accounts,          3) \
X(a, POINTER,  REPEATED, MESSAGE,  instr_accounts,    4) \
X(a, POINTER,  OPTIONAL, BYTES,    data,              5) \
X(a, STATIC,   OPTIONAL, UINT64,   cu_avail,          6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  txn_context,       7) \
X(a, STATIC,   OPTIONAL, MESSAGE,  slot_context,      8) \
X(a, STATIC,   OPTIONAL, MESSAGE,  epoch_context,     9)
#define FD_EXEC_TEST_INSTR_CONTEXT_CALLBACK NULL
#define FD_EXEC_TEST_INSTR_CONTEXT_DEFAULT NULL
#define fd_exec_test_instr_context_t_accounts_MSGTYPE fd_exec_test_acct_state_t
#define fd_exec_test_instr_context_t_instr_accounts_MSGTYPE fd_exec_test_instr_acct_t
#define fd_exec_test_instr_context_t_txn_context_MSGTYPE fd_exec_test_txn_context_t
#define fd_exec_test_instr_context_t_slot_context_MSGTYPE fd_exec_test_slot_context_t
#define fd_exec_test_instr_context_t_epoch_context_MSGTYPE fd_exec_test_epoch_context_t

#define FD_EXEC_TEST_INSTR_EFFECTS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    result,            1) \
X(a, STATIC,   OPTIONAL, UINT32,   custom_err,        2) \
X(a, POINTER,  REPEATED, MESSAGE,  modified_accounts,   3) \
X(a, STATIC,   SINGULAR, UINT64,   cu_avail,          4) \
X(a, POINTER,  SINGULAR, BYTES,    return_data,       5)
#define FD_EXEC_TEST_INSTR_EFFECTS_CALLBACK NULL
#define FD_EXEC_TEST_INSTR_EFFECTS_DEFAULT NULL
#define fd_exec_test_instr_effects_t_modified_accounts_MSGTYPE fd_exec_test_acct_state_t

#define FD_EXEC_TEST_INSTR_FIXTURE_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  input,             1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  output,            2)
#define FD_EXEC_TEST_INSTR_FIXTURE_CALLBACK NULL
#define FD_EXEC_TEST_INSTR_FIXTURE_DEFAULT NULL
#define fd_exec_test_instr_fixture_t_input_MSGTYPE fd_exec_test_instr_context_t
#define fd_exec_test_instr_fixture_t_output_MSGTYPE fd_exec_test_instr_effects_t

#define FD_EXEC_TEST_INPUT_DATA_REGION_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   offset,            1) \
X(a, POINTER,  SINGULAR, BYTES,    content,           2) \
X(a, STATIC,   SINGULAR, BOOL,     is_writable,       3)
#define FD_EXEC_TEST_INPUT_DATA_REGION_CALLBACK NULL
#define FD_EXEC_TEST_INPUT_DATA_REGION_DEFAULT NULL

#define FD_EXEC_TEST_VM_CONTEXT_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   heap_max,          1) \
X(a, POINTER,  SINGULAR, BYTES,    rodata,            2) \
X(a, STATIC,   SINGULAR, UINT64,   rodata_text_section_offset,   3) \
X(a, STATIC,   SINGULAR, UINT64,   rodata_text_section_length,   4) \
X(a, POINTER,  REPEATED, MESSAGE,  input_data_regions,   5) \
X(a, STATIC,   SINGULAR, UINT64,   r0,                6) \
X(a, STATIC,   SINGULAR, UINT64,   r1,                7) \
X(a, STATIC,   SINGULAR, UINT64,   r2,                8) \
X(a, STATIC,   SINGULAR, UINT64,   r3,                9) \
X(a, STATIC,   SINGULAR, UINT64,   r4,               10) \
X(a, STATIC,   SINGULAR, UINT64,   r5,               11) \
X(a, STATIC,   SINGULAR, UINT64,   r6,               12) \
X(a, STATIC,   SINGULAR, UINT64,   r7,               13) \
X(a, STATIC,   SINGULAR, UINT64,   r8,               14) \
X(a, STATIC,   SINGULAR, UINT64,   r9,               15) \
X(a, STATIC,   SINGULAR, UINT64,   r10,              16) \
X(a, STATIC,   SINGULAR, UINT64,   r11,              17)
#define FD_EXEC_TEST_VM_CONTEXT_CALLBACK NULL
#define FD_EXEC_TEST_VM_CONTEXT_DEFAULT NULL
#define fd_exec_test_vm_context_t_input_data_regions_MSGTYPE fd_exec_test_input_data_region_t

#define FD_EXEC_TEST_SYSCALL_INVOCATION_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   function_name,     1) \
X(a, POINTER,  SINGULAR, BYTES,    heap_prefix,       2)
#define FD_EXEC_TEST_SYSCALL_INVOCATION_CALLBACK NULL
#define FD_EXEC_TEST_SYSCALL_INVOCATION_DEFAULT NULL

#define FD_EXEC_TEST_SYSCALL_CONTEXT_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  vm_ctx,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  instr_ctx,         2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  syscall_invocation,   3)
#define FD_EXEC_TEST_SYSCALL_CONTEXT_CALLBACK NULL
#define FD_EXEC_TEST_SYSCALL_CONTEXT_DEFAULT NULL
#define fd_exec_test_syscall_context_t_vm_ctx_MSGTYPE fd_exec_test_vm_context_t
#define fd_exec_test_syscall_context_t_instr_ctx_MSGTYPE fd_exec_test_instr_context_t
#define fd_exec_test_syscall_context_t_syscall_invocation_MSGTYPE fd_exec_test_syscall_invocation_t

#define FD_EXEC_TEST_SYSCALL_EFFECTS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    error,             1) \
X(a, STATIC,   SINGULAR, UINT64,   r0,                2) \
X(a, STATIC,   SINGULAR, UINT64,   cu_avail,          3) \
X(a, POINTER,  SINGULAR, BYTES,    heap,              4) \
X(a, POINTER,  SINGULAR, BYTES,    stack,             5) \
X(a, POINTER,  SINGULAR, BYTES,    inputdata,         6) \
X(a, STATIC,   SINGULAR, UINT64,   frame_count,       7) \
X(a, POINTER,  SINGULAR, BYTES,    log,               8)
#define FD_EXEC_TEST_SYSCALL_EFFECTS_CALLBACK NULL
#define FD_EXEC_TEST_SYSCALL_EFFECTS_DEFAULT NULL

#define FD_EXEC_TEST_SYSCALL_FIXTURE_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  input,             1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  output,            2)
#define FD_EXEC_TEST_SYSCALL_FIXTURE_CALLBACK NULL
#define FD_EXEC_TEST_SYSCALL_FIXTURE_DEFAULT NULL
#define fd_exec_test_syscall_fixture_t_input_MSGTYPE fd_exec_test_syscall_context_t
#define fd_exec_test_syscall_fixture_t_output_MSGTYPE fd_exec_test_syscall_effects_t

extern const pb_msgdesc_t fd_exec_test_feature_set_t_msg;
extern const pb_msgdesc_t fd_exec_test_acct_state_t_msg;
extern const pb_msgdesc_t fd_exec_test_epoch_context_t_msg;
extern const pb_msgdesc_t fd_exec_test_slot_context_t_msg;
extern const pb_msgdesc_t fd_exec_test_txn_context_t_msg;
extern const pb_msgdesc_t fd_exec_test_instr_acct_t_msg;
extern const pb_msgdesc_t fd_exec_test_instr_context_t_msg;
extern const pb_msgdesc_t fd_exec_test_instr_effects_t_msg;
extern const pb_msgdesc_t fd_exec_test_instr_fixture_t_msg;
extern const pb_msgdesc_t fd_exec_test_input_data_region_t_msg;
extern const pb_msgdesc_t fd_exec_test_vm_context_t_msg;
extern const pb_msgdesc_t fd_exec_test_syscall_invocation_t_msg;
extern const pb_msgdesc_t fd_exec_test_syscall_context_t_msg;
extern const pb_msgdesc_t fd_exec_test_syscall_effects_t_msg;
extern const pb_msgdesc_t fd_exec_test_syscall_fixture_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define FD_EXEC_TEST_FEATURE_SET_FIELDS &fd_exec_test_feature_set_t_msg
#define FD_EXEC_TEST_ACCT_STATE_FIELDS &fd_exec_test_acct_state_t_msg
#define FD_EXEC_TEST_EPOCH_CONTEXT_FIELDS &fd_exec_test_epoch_context_t_msg
#define FD_EXEC_TEST_SLOT_CONTEXT_FIELDS &fd_exec_test_slot_context_t_msg
#define FD_EXEC_TEST_TXN_CONTEXT_FIELDS &fd_exec_test_txn_context_t_msg
#define FD_EXEC_TEST_INSTR_ACCT_FIELDS &fd_exec_test_instr_acct_t_msg
#define FD_EXEC_TEST_INSTR_CONTEXT_FIELDS &fd_exec_test_instr_context_t_msg
#define FD_EXEC_TEST_INSTR_EFFECTS_FIELDS &fd_exec_test_instr_effects_t_msg
#define FD_EXEC_TEST_INSTR_FIXTURE_FIELDS &fd_exec_test_instr_fixture_t_msg
#define FD_EXEC_TEST_INPUT_DATA_REGION_FIELDS &fd_exec_test_input_data_region_t_msg
#define FD_EXEC_TEST_VM_CONTEXT_FIELDS &fd_exec_test_vm_context_t_msg
#define FD_EXEC_TEST_SYSCALL_INVOCATION_FIELDS &fd_exec_test_syscall_invocation_t_msg
#define FD_EXEC_TEST_SYSCALL_CONTEXT_FIELDS &fd_exec_test_syscall_context_t_msg
#define FD_EXEC_TEST_SYSCALL_EFFECTS_FIELDS &fd_exec_test_syscall_effects_t_msg
#define FD_EXEC_TEST_SYSCALL_FIXTURE_FIELDS &fd_exec_test_syscall_fixture_t_msg

/* Maximum encoded size of messages (where known) */
/* fd_exec_test_FeatureSet_size depends on runtime parameters */
/* fd_exec_test_AcctState_size depends on runtime parameters */
/* fd_exec_test_EpochContext_size depends on runtime parameters */
/* fd_exec_test_InstrContext_size depends on runtime parameters */
/* fd_exec_test_InstrEffects_size depends on runtime parameters */
/* fd_exec_test_InstrFixture_size depends on runtime parameters */
/* fd_exec_test_InputDataRegion_size depends on runtime parameters */
/* fd_exec_test_VmContext_size depends on runtime parameters */
/* fd_exec_test_SyscallInvocation_size depends on runtime parameters */
/* fd_exec_test_SyscallContext_size depends on runtime parameters */
/* fd_exec_test_SyscallEffects_size depends on runtime parameters */
/* fd_exec_test_SyscallFixture_size depends on runtime parameters */
#define FD_EXEC_TEST_INSTR_ACCT_SIZE             10
#define FD_EXEC_TEST_SLOT_CONTEXT_SIZE           0
#define FD_EXEC_TEST_TXN_CONTEXT_SIZE            0
#define ORG_SOLANA_SEALEVEL_V1_FD_EXEC_TEST_PB_H_MAX_SIZE FD_EXEC_TEST_INSTR_ACCT_SIZE

/* Mapping from canonical names (mangle_names or overridden package name) */
#define org_solana_sealevel_v1_FeatureSet fd_exec_test_FeatureSet
#define org_solana_sealevel_v1_AcctState fd_exec_test_AcctState
#define org_solana_sealevel_v1_EpochContext fd_exec_test_EpochContext
#define org_solana_sealevel_v1_SlotContext fd_exec_test_SlotContext
#define org_solana_sealevel_v1_TxnContext fd_exec_test_TxnContext
#define org_solana_sealevel_v1_InstrAcct fd_exec_test_InstrAcct
#define org_solana_sealevel_v1_InstrContext fd_exec_test_InstrContext
#define org_solana_sealevel_v1_InstrEffects fd_exec_test_InstrEffects
#define org_solana_sealevel_v1_InstrFixture fd_exec_test_InstrFixture
#define org_solana_sealevel_v1_InputDataRegion fd_exec_test_InputDataRegion
#define org_solana_sealevel_v1_VmContext fd_exec_test_VmContext
#define org_solana_sealevel_v1_SyscallInvocation fd_exec_test_SyscallInvocation
#define org_solana_sealevel_v1_SyscallContext fd_exec_test_SyscallContext
#define org_solana_sealevel_v1_SyscallEffects fd_exec_test_SyscallEffects
#define org_solana_sealevel_v1_SyscallFixture fd_exec_test_SyscallFixture
#define ORG_SOLANA_SEALEVEL_V1_FEATURE_SET_INIT_DEFAULT FD_EXEC_TEST_FEATURE_SET_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_ACCT_STATE_INIT_DEFAULT FD_EXEC_TEST_ACCT_STATE_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_EPOCH_CONTEXT_INIT_DEFAULT FD_EXEC_TEST_EPOCH_CONTEXT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_SLOT_CONTEXT_INIT_DEFAULT FD_EXEC_TEST_SLOT_CONTEXT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_TXN_CONTEXT_INIT_DEFAULT FD_EXEC_TEST_TXN_CONTEXT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_INSTR_ACCT_INIT_DEFAULT FD_EXEC_TEST_INSTR_ACCT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_INSTR_CONTEXT_INIT_DEFAULT FD_EXEC_TEST_INSTR_CONTEXT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_INSTR_EFFECTS_INIT_DEFAULT FD_EXEC_TEST_INSTR_EFFECTS_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_INSTR_FIXTURE_INIT_DEFAULT FD_EXEC_TEST_INSTR_FIXTURE_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_INPUT_DATA_REGION_INIT_DEFAULT FD_EXEC_TEST_INPUT_DATA_REGION_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_VM_CONTEXT_INIT_DEFAULT FD_EXEC_TEST_VM_CONTEXT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_INVOCATION_INIT_DEFAULT FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_CONTEXT_INIT_DEFAULT FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_EFFECTS_INIT_DEFAULT FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_FIXTURE_INIT_DEFAULT FD_EXEC_TEST_SYSCALL_FIXTURE_INIT_DEFAULT
#define ORG_SOLANA_SEALEVEL_V1_FEATURE_SET_INIT_ZERO FD_EXEC_TEST_FEATURE_SET_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_ACCT_STATE_INIT_ZERO FD_EXEC_TEST_ACCT_STATE_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_EPOCH_CONTEXT_INIT_ZERO FD_EXEC_TEST_EPOCH_CONTEXT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_SLOT_CONTEXT_INIT_ZERO FD_EXEC_TEST_SLOT_CONTEXT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_TXN_CONTEXT_INIT_ZERO FD_EXEC_TEST_TXN_CONTEXT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_INSTR_ACCT_INIT_ZERO FD_EXEC_TEST_INSTR_ACCT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_INSTR_CONTEXT_INIT_ZERO FD_EXEC_TEST_INSTR_CONTEXT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_INSTR_EFFECTS_INIT_ZERO FD_EXEC_TEST_INSTR_EFFECTS_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_INSTR_FIXTURE_INIT_ZERO FD_EXEC_TEST_INSTR_FIXTURE_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_INPUT_DATA_REGION_INIT_ZERO FD_EXEC_TEST_INPUT_DATA_REGION_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_VM_CONTEXT_INIT_ZERO FD_EXEC_TEST_VM_CONTEXT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_INVOCATION_INIT_ZERO FD_EXEC_TEST_SYSCALL_INVOCATION_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_CONTEXT_INIT_ZERO FD_EXEC_TEST_SYSCALL_CONTEXT_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_EFFECTS_INIT_ZERO FD_EXEC_TEST_SYSCALL_EFFECTS_INIT_ZERO
#define ORG_SOLANA_SEALEVEL_V1_SYSCALL_FIXTURE_INIT_ZERO FD_EXEC_TEST_SYSCALL_FIXTURE_INIT_ZERO

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
