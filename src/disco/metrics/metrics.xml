<!--
This file describes all possible metrics that could potentially be
collected and reported by Firedancer.  Metrics are grouped into
categories.

These metrics must be backwards compatible and you should not change
existing metric names.  Instead they should be deprecated and a new
metric introduced.
-->

<metrics>

<linkin>
    <counter name="ConsumedCount" summary="The number of times the link reader has consumed a fragment." />
    <counter name="ConsumedSizeBytes" summary="The total number of bytes read by the link consumer." />
    <counter name="FilteredCount" summary="The number of fragments that were filtered and not consumed." />
    <counter name="FilteredSizeBytes" summary="The total number of bytes read by the link consumer that were filtered." />
    <counter name="OverrunPollingCount" summary="The number of times the link has been overrun while polling." />
    <counter name="OverrunPollingFragCount" summary="The number of fragments the link has not processed because it was overrun while polling." />
    <counter name="OverrunReadingCount" summary="The number of input overruns detected while reading metadata by the consumer." />
    <counter name="OverrunReadingFragCount" summary="The number of fragments the link has not processed because it was overrun while reading." />
</linkin>

<linkout>
    <counter name="SlowCount" summary="The number of times the consumer was detected as rate limiting consumer by the producer." />
</linkout>

<enum name="TileRegime">
    <int value="0" name="CaughtUpHousekeeping" label="Caught up + Housekeeping" />
    <int value="1" name="ProcessingHousekeeping" label="Processing + Housekeeping" />
    <int value="2" name="BackpressureHousekeeping" label="Backpressure + Housekeeping" />

    <!-- Before credit + After credit -->
    <int value="3" name="CaughtUpPrefrag" label="Caught up + Prefrag" />
    <int value="4" name="ProcessingPrefrag" label="Processing + Prefrag" />
    <int value="5" name="BackpressurePrefrag" label="Backpressure + Prefrag" />

    <int value="6" name="CaughtUpPostfrag" label="Caught up + Postfrag" />
    <int value="7" name="ProcessingPostfrag" label="Processing + Postfrag" />
</enum>

<common>
    <gauge name="Pid" clickhouse_exclude="true" summary="The process ID of the tile." />
    <gauge name="Tid" clickhouse_exclude="true" summary="The thread ID of the tile. Always the same as the Pid in production, but might be different in development." />
    <counter name="ContextSwitchInvoluntaryCount" summary="The number of involuntary context switches." />
    <counter name="ContextSwitchVoluntaryCount" summary="The number of voluntary context switches." />
    <gauge name="Status" summary="The current status of the tile. 0 is booting, 1 is running. 2 is shutdown" />
    <gauge name="Heartbeat" summary="The last UNIX timestamp in nanoseconds that the tile heartbeated." />
    <gauge name="InBackpressure" summary="Whether the tile is currently backpressured or not, either 1 or 0." />
    <counter name="BackpressureCount" summary="Number of times the tile has had to wait for one of more consumers to catch up to resume publishing." />
    <counter name="RegimeDurationNanos" enum="TileRegime" converter="nanoseconds" summary="Mutually exclusive and exhaustive duration of time the tile spent in each of the regimes." />
</common>

<tile name="net">
    <counter name="RxPktCnt" summary="Packet receive count." />
    <counter name="RxBytesTotal" summary="Total number of bytes received (including Ethernet header)." />
    <counter name="RxUnderszCnt" summary="Number of incoming packets dropped due to being too small." />
    <counter name="RxFillBlockedCnt" summary="Number of incoming packets dropped due to fill ring being full." />
    <counter name="RxBackpressureCnt" summary="Number of incoming packets dropped due to backpressure." />
    <gauge name="RxBusyCnt" summary="Number of receive buffers currently busy." />
    <gauge name="RxIdleCnt" summary="Number of receive buffers currently idle." />

    <counter name="TxSubmitCnt" summary="Number of packet transmit jobs submitted." />
    <counter name="TxCompleteCnt" summary="Number of packet transmit jobs marked as completed by the kernel." />
    <counter name="TxBytesTotal" summary="Total number of bytes transmitted (including Ethernet header)." />
    <counter name="TxRouteFailCnt" summary="Number of packet transmit jobs dropped due to route failure." />
    <counter name="TxNeighborFailCnt" summary="Number of packet transmit jobs dropped due to unresolved neighbor." />
    <counter name="TxFullFailCnt" summary="Number of packet transmit jobs dropped due to XDP TX ring full or missing completions." />
    <gauge name="TxBusyCnt" summary="Number of transmit buffers currently busy." />
    <gauge name="TxIdleCnt" summary="Number of transmit buffers currently idle." />

    <counter name="XskTxWakeupCnt" summary="Number of XSK sendto syscalls dispatched." />
    <counter name="XskRxWakeupCnt" summary="Number of XSK recvmsg syscalls dispatched." />

    <!-- Kernel xdp_statistics struct -->
    <counter name="XdpRxDroppedOther" summary="xdp_statistics_v0.rx_dropped: Dropped for other reasons" />
    <counter name="XdpRxInvalidDescs" summary="xdp_statistics_v0.rx_invalid_descs: Dropped due to invalid descriptor" />
    <counter name="XdpTxInvalidDescs" summary="xdp_statistics_v0.tx_invalid_descs: Dropped due to invalid descriptor" />
    <counter name="XdpRxRingFull" summary="xdp_statistics_v1.rx_ring_full: Dropped due to rx ring being full" />
    <counter name="XdpRxFillRingEmptyDescs" summary="xdp_statistics_v1.rx_fill_ring_empty_descs: Failed to retrieve item from fill ring" />
    <counter name="XdpTxRingEmptyDescs" summary="xdp_statistics_v1.tx_ring_empty_descs: Failed to retrieve item from tx ring" />

    <!-- GRE metrics -->
    <counter name="RxGreCnt" summary="Number of valid GRE packets received" />
    <counter name="RxGreInvalidCnt" summary="Number of invalid GRE packets received" />
    <counter name="RxGreIgnoredCnt" summary="Number of received but ignored GRE packets" />
    <counter name="TxGreCnt" summary="Number of GRE packet transmit jobs submitted" />
    <counter name="TxGreRouteFailCnt" summary="Number of GRE packets transmit jobs dropped due to route failure" />
</tile>

<enum name="SockErr">
    <int value="0" name="NoError" label="No error" />
    <int value="1" name="Slow" label="ENOBUFS, EAGAIN error" />
    <int value="2" name="Perm" label="EPERM error (blocked by netfilter)" />
    <int value="3" name="Unreach" label="ENETUNREACH, EHOSTUNREACH error" />
    <int value="4" name="Down" label="ENONET, ENETDOWN, EHOSTDOWN error" />
    <int value="3" name="Other" label="Unrecognized error code" />
</enum>

<tile name="sock">
    <counter name="SyscallsSendmmsg" enum="SockErr" summary="Number of sendmmsg syscalls dispatched" />
    <counter name="SyscallsRecvmmsg" summary="Number of recvmsg syscalls dispatched" />
    <counter name="RxPktCnt" summary="Number of packets received" />
    <counter name="TxPktCnt" summary="Number of packets sent" />
    <counter name="TxDropCnt" summary="Number of packets failed to send" />
    <counter name="TxBytesTotal" summary="Total number of bytes transmitted (including Ethernet header)." />
    <counter name="RxBytesTotal" summary="Total number of bytes received (including Ethernet header)." />
</tile>

<enum name="TpuRecvType">
    <int value="0" name="Udp" label="TPU/UDP" />
    <int value="1" name="QuicFast" label="TPU/QUIC unfragmented" />
    <int value="2" name="QuicFrag" label="TPU/QUIC fragmented" />
</enum>

<enum name="FrameTxAllocResult">
    <int value="0" name="Success"       label="Success" />
    <int value="1" name="FailEmptyPool" label="PktMetaPoolEmpty" />
    <int value="2" name="FailConnMax"   label="ConnMaxedInflightFrames" />
</enum>

<enum name="QuicInitialTokenLen">
    <int value="0" name="Zero"       label="No token" />
    <int value="1" name="FdQuicLen"  label="fd_quic retry token length" />
    <int value="2" name="InvalidLen" label="Invalid token length" />
</enum>

<enum name="QuicFrameType">
    <!-- These don't correspond to QUIC frame IDs because gen_metrics.py is currently bugged and corrupts enums with sparse IDs -->
    <int value="0" name="Unknown" label="Unknown frame type" />
    <int value="1" name="Ack" label="ACK frame" />
    <int value="2" name="ResetStream" label="RESET_STREAM frame" />
    <int value="3" name="StopSending" label="STOP_SENDING frame" />
    <int value="4" name="Crypto" label="CRYPTO frame" />
    <int value="5" name="NewToken" label="NEW_TOKEN frame" />
    <int value="6" name="Stream" label="STREAM frame" />
    <int value="7" name="MaxData" label="MAX_DATA frame" />
    <int value="8" name="MaxStreamData" label="MAX_STREAM_DATA frame" />
    <int value="9" name="MaxStreams" label="MAX_STREAMS frame" />
    <int value="10" name="DataBlocked" label="DATA_BLOCKED frame" />
    <int value="11" name="StreamDataBlocked" label="STREAM_DATA_BLOCKED frame" />
    <int value="12" name="StreamsBlocked" label="STREAMS_BLOCKED(bidi) frame" />
    <int value="13" name="NewConnId" label="NEW_CONN_ID frame" />
    <int value="14" name="RetireConnId" label="RETIRE_CONN_ID frame" />
    <int value="15" name="PathChallenge" label="PATH_CHALLENGE frame" />
    <int value="16" name="PathResponse" label="PATH_RESPONSE frame" />
    <int value="17" name="ConnCloseQuic" label="CONN_CLOSE(transport) frame" />
    <int value="18" name="ConnCloseApp" label="CONN_CLOSE(app) frame" />
    <int value="19" name="HandshakeDone" label="HANDSHAKE_DONE frame" />
    <int value="20" name="Ping" label="PING frame" />
    <int value="21" name="Padding" label="PADDING frame" />
</enum>

<enum name="QuicStreamCloseType">
    <int value="0" name="End" label="gracefully closed" />
    <int value="1" name="PeerReset" label="RESET_STREAM event received" />
    <int value="2" name="PeerStop" label="STOP_SENDING events received" />
    <int value="3" name="Drop" label="dropped due to excessive concurrency" />
    <int value="4" name="ConnAbort" label="connection abort" />
</enum>

<enum name="QuicAckTx">
    <int value="0" name="Noop" label="non-ACK-eliciting packet" />
    <int value="1" name="New" label="new ACK range" />
    <int value="2" name="Merged" label="merged into existing ACK range" />
    <int value="3" name="Drop" label="out of buffers" />
    <int value="4" name="Cancel" label="ACK suppressed by handler" />
</enum>

<enum name="QuicEncLevel">
    <int value="0" name="Initial" label="initial" />
    <int value="1" name="Early" label="early data" />
    <int value="2" name="Handshake" label="handshake" />
    <int value="3" name="App" label="app data" />
</enum>

<enum name="QuicConnState">
    <int value="0" name="Invalid" label="freed" />
    <int value="1" name="Handshake" label="handshaking peer" />
    <int value="2" name="HandshakeComplete" label="handshake complete, confirming with peer" />
    <int value="3" name="Active" label="active connection" />
    <int value="4" name="PeerClose" label="peer requested close" />
    <int value="5" name="Abort" label="connection terminating due to error" />
    <int value="6" name="ClosePending" label="connection is closing" />
    <int value="7" name="Dead" label="connection about to be freed" />
</enum>

<enum name="QuicPktHandle">
    <int value="0" name="Initial" label="initial" />
    <int value="1" name="Retry" label="retry" />
    <int value="2" name="Handshake" label="handshake" />
    <int value="3" name="OneRtt" label="1-RTT" />
</enum>

<tile name="quic">
    <counter name="TxnsOverrun" summary="Count of txns overrun before reassembled (too small txn_reassembly_count)." />
    <counter name="TxnReasmsStarted" summary="Count of fragmented txn receive ops started." />
    <gauge name="TxnReasmsActive" summary="Number of fragmented txn receive ops currently active." />
    <counter name="FragsOk" summary="Count of txn frags received" />
    <counter name="FragsGap" summary="Count of txn frags dropped due to data gap" />
    <counter name="FragsDup" summary="Count of txn frags dropped due to dup (stream already completed)" />
    <counter name="TxnsReceived" enum="TpuRecvType" summary="Count of txns received via TPU." />
    <counter name="TxnsAbandoned" summary="Count of txns abandoned because a conn was lost." />

    <counter name="TxnUndersz" summary="Count of txns received via QUIC dropped because they were too small." />
    <counter name="TxnOversz" summary="Count of txns received via QUIC dropped because they were too large." />

    <counter name="LegacyTxnUndersz" summary="Count of packets received on the non-QUIC port that were too small to be a valid IP packet." />
    <counter name="LegacyTxnOversz" summary="Count of packets received on the non-QUIC port that were too large to be a valid transaction." />

    <counter name="ReceivedPackets" summary="Number of IP packets received." />
    <counter name="ReceivedBytes" summary="Total bytes received (including IP, UDP, QUIC headers)." />
    <counter name="SentPackets" summary="Number of IP packets sent." />
    <counter name="SentBytes" summary="Total bytes sent (including IP, UDP, QUIC headers)." />

    <gauge name="ConnectionsAlloc" summary="The number of currently allocated QUIC connections." />
    <gauge name="ConnectionsState" enum="QuicConnState" summary="The number of QUIC connections in each state." />
    <counter name="ConnectionsCreated" summary="The total number of connections that have been created." />
    <counter name="ConnectionsClosed" summary="Number of connections gracefully closed." />
    <counter name="ConnectionsAborted" summary="Number of connections aborted." />
    <counter name="ConnectionsTimedOut" summary="Number of connections timed out." />
    <counter name="ConnectionsRetried" summary="Number of connections established with retry." />
    <counter name="ConnectionErrorNoSlots" summary="Number of connections that failed to create due to lack of slots." />
    <counter name="ConnectionErrorRetryFail" summary="Number of connections that failed during retry (e.g. invalid token)." />

    <counter name="PktNoConn" enum="QuicPktHandle" summary="Number of packets with an unknown connection ID." />
    <counter name="FrameTxAlloc" enum="FrameTxAllocResult" summary="Results of attempts to acquire QUIC frame metadata." />
    <counter name="InitialTokenLen" enum="QuicInitialTokenLen" summary="Number of Initial packets grouped by token length." />

    <counter name="HandshakesCreated" summary="Number of handshake flows created." />
    <counter name="HandshakeErrorAllocFail" summary="Number of handshakes dropped due to alloc fail." />
    <counter name="HandshakeEvicted" summary="Number of handshakes dropped due to eviction." />

    <counter name="StreamReceivedEvents" summary="Number of stream RX events." />
    <counter name="StreamReceivedBytes" summary="Total stream payload bytes received." />

    <counter name="ReceivedFrames" enum="QuicFrameType" summary="Number of QUIC frames received." />

    <counter name="AckTx" enum="QuicAckTx" summary="ACK events" />

    <histogram name="ServiceDurationSeconds" min="0.00000001" max="0.1" converter="seconds">
      <summary>Duration spent in service</summary>
    </histogram>
    <histogram name="ReceiveDurationSeconds" min="0.00000001" max="0.1" converter="seconds">
      <summary>Duration spent processing packets</summary>
    </histogram>

    <counter name="FrameFailParse" summary="Number of QUIC frames failed to parse." />
    <counter name="PktCryptoFailed" enum="QuicEncLevel" summary="Number of packets that failed decryption." />
    <counter name="PktNoKey" enum="QuicEncLevel" summary="Number of packets that failed decryption due to missing key." />
    <counter name="PktNetHeaderInvalid" summary="Number of packets dropped due to weird IP or UDP header." />
    <counter name="PktQuicHeaderInvalid" summary="Number of packets dropped due to weird QUIC header." />
    <counter name="PktUndersz" summary="Number of QUIC packets dropped due to being too small." />
    <counter name="PktOversz" summary="Number of QUIC packets dropped due to being too large." />
    <counter name="PktVerneg" summary="Number of QUIC version negotiation packets received." />
    <counter name="RetrySent" summary="Number of QUIC Retry packets sent." />
    <counter name="PktRetransmissions" summary="Number of QUIC packets that retransmitted." />
</tile>

<enum name="NewContactOutcome">
    <int value="0" name="Unroutable" label="Skipped (unroutable)" />
    <int value="1" name="Initialized" label="Initialized" />
    <int value="2" name="Changed" label="Contact info changed" />
    <int value="3" name="NoChange" label="Contact info unchanged" />
</enum>

<enum name="TxnSendResult">
    <int value="0" name="Success" label="Success" />
    <int value="1" name="NoCi" label="No contact info" />
    <int value="2" name="NoConn" label="No QUIC connection" />
    <int value="3" name="NoStream" label="No QUIC stream" />
</enum>

<enum name="SendQuicPorts">
    <int value="0" name="QuicVote" label="QUIC Vote port" />
    <int value="1" name="QuicTpu" label="QUIC TPU port" />
</enum>

<enum name="SendEnsureConnResult">
    <int value="0" name="NoLeader" label="No QUIC connection" />
    <int value="1" name="NoCi" label="No contact info" />
    <int value="2" name="NewConnection" label="Initiated connection" />
    <int value="3" name="ConnFailed" label="Connection failed" />
    <int value="4" name="Connected" label="Connection exists" />
</enum>

<tile name="send">

    <counter name="LeaderNotFound" summary="Total number of times slot leader not found" />
    <counter name="UnstakedCi" summary="Total number of times we received contact info for an unstaked node" />
    <counter name="CiRemoved" summary="Total number of times we removed contact info" />

    <counter name="NewContactInfoQuicVote" enum="NewContactOutcome" summary="Total number of contact infos received and handled for QUIC Vote port" />
    <counter name="NewContactInfoQuicTpu" enum="NewContactOutcome" summary="Total number of contact infos received and handled for QUIC TPU port" />
    <counter name="NewContactInfoUdpVote" enum="NewContactOutcome" summary="Total number of contact infos received and handled for UDP Vote port" />
    <counter name="NewContactInfoUdpTpu" enum="NewContactOutcome" summary="Total number of contact infos received and handled for UDP TPU port" />

    <counter name="SendResultQuicVote" enum="TxnSendResult" summary="Total count of results from trying to send via QUIC Vote port" />
    <counter name="SendResultQuicTpu" enum="TxnSendResult" summary="Total count of results from trying to send via QUIC TPU port" />
    <counter name="SendResultUdpVote" enum="TxnSendResult" summary="Total count of results from trying to send via UDP Vote port" />
    <counter name="SendResultUdpTpu" enum="TxnSendResult" summary="Total count of results from trying to send via UDP TPU port" />

    <counter name="EnsureConnResultQuicVote" enum="SendEnsureConnResult" summary="Total count of results from trying to ensure a connection for a leader for QUIC Vote port" />
    <counter name="EnsureConnResultQuicTpu" enum="SendEnsureConnResult" summary="Total count of results from trying to ensure a connection for a leader for QUIC TPU port" />

    <counter name="HandshakeComplete" enum="SendQuicPorts" summary="Total number of times we completed a handshake" />
    <counter name="QuicConnFinal" enum="SendQuicPorts" summary="Total number of times QUIC connection closed" />

    <gauge name="StakedNoCi" summary="Last counted # staked accounts without contact info" />
    <gauge name="StaleCi" summary="Last counted # staked accounts with stale contact info" />

    <!-- QUIC packet metrics -->
    <counter name="ReceivedPackets" summary="Total count of QUIC packets received" />
    <counter name="ReceivedBytes" summary="Total bytes received via QUIC" />
    <counter name="SentPackets" summary="Total count of QUIC packets sent" />
    <counter name="SentBytes" summary="Total bytes sent via QUIC" />
    <counter name="RetrySent" summary="Total count of QUIC retry packets sent" />

    <!-- QUIC connection metrics -->
    <gauge name="ConnectionsAlloc" summary="Number of currently allocated QUIC connections" />
    <gauge name="ConnectionsState" enum="QuicConnState" summary="Number of QUIC connections in each state" />
    <counter name="ConnectionsCreated" summary="Total count of QUIC connections created" />
    <counter name="ConnectionsClosed" summary="Total count of QUIC connections closed" />
    <counter name="ConnectionsAborted" summary="Total count of QUIC connections aborted" />
    <counter name="ConnectionsTimedOut" summary="Total count of QUIC connections timed out" />
    <counter name="ConnectionsRetried" summary="Total count of QUIC connections retried" />

    <!-- QUIC connection error metrics -->
    <counter name="ConnectionErrorNoSlots" summary="Total count of connection errors due to no slots" />
    <counter name="ConnectionErrorRetryFail" summary="Total count of connection retry failures" />

    <!-- QUIC packet error metrics -->
    <counter name="PktCryptoFailed" enum="QuicEncLevel" summary="Total count of packets with crypto failures" />
    <counter name="PktNoKey" enum="QuicEncLevel" summary="Total count of packets with no key" />
    <counter name="PktNoConn" enum="QuicPktHandle" summary="Total count of packets with no connection" />
    <counter name="PktTxAllocFail" summary="Total count of packet TX allocation failures" />
    <counter name="PktNetHeaderInvalid" summary="Total count of packets with invalid network headers" />
    <counter name="PktQuicHeaderInvalid" summary="Total count of packets with invalid QUIC headers" />
    <counter name="PktUndersz" summary="Total count of undersized packets" />
    <counter name="PktOversz" summary="Total count of oversized packets" />
    <counter name="PktVerneg" summary="Total count of version negotiation packets" />
    <counter name="PktRetransmissions" summary="Total count of packet retransmissions" />

    <!-- QUIC handshake metrics -->
    <counter name="HandshakesCreated" summary="Total count of QUIC handshakes created" />
    <counter name="HandshakeErrorAllocFail" summary="Total count of handshake allocation failures" />
    <counter name="HandshakeEvicted" summary="Total count of handshakes evicted" />

    <!-- QUIC stream metrics -->
    <counter name="StreamReceivedEvents" summary="Total count of stream events received" />
    <counter name="StreamReceivedBytes" summary="Total bytes received via streams" />

    <!-- QUIC frame metrics -->
    <counter name="ReceivedFrames" enum="QuicFrameType" summary="Total count of QUIC frames received" />
    <counter name="FrameFailParse" summary="Total count of frame parse failures" />
    <counter name="FrameTxAlloc" enum="FrameTxAllocResult" summary="Results of attempts to acquire QUIC frame metadata." />

    <!-- QUIC ACK metrics -->
    <counter name="AckTx" enum="QuicAckTx" summary="Total count of ACK frames transmitted" />

    <!-- QUIC timing metrics -->
    <histogram name="ServiceDurationSeconds" min="0.00000001" max="0.1" converter="seconds">
      <summary>Duration spent in service</summary>
    </histogram>
    <histogram name="ReceiveDurationSeconds" min="0.00000001" max="0.1" converter="seconds">
      <summary>Duration spent processing packets</summary>
    </histogram>
    <histogram name="SignDurationNanos" min="1000" max="5000000" converter="none">
      <!-- 1µs to 5ms -->
      <summary>Duration spent waiting for tls_cv signatures</summary>
    </histogram>
</tile>

<enum name="BundleError">
    <int value="1" name="Protobuf" label="Protobuf decode/encode error" />
    <int value="2" name="Transport" label="Transport error" />
    <int value="3" name="Timeout" label="I/O timeout" />
    <int value="4" name="NoFeeInfo" label="Bundle dropped due to missing fee info" />
    <int value="5" name="SslAlloc" label="OpenSSL alloc fail" />
</enum>

<tile name="bundle">
    <counter name="TransactionReceived" summary="Total count of transactions received, including transactions within bundles" />
    <counter name="PacketReceived" summary="Total count of packets received" />
    <counter name="BundleReceived" summary="Total count of bundles received" />
    <counter name="Errors" enum="BundleError" summary="Number of gRPC errors encountered" />
    <gauge name="HeapSize" summary="Workspace heap size" />
    <gauge name="HeapFreeBytes" summary="Approx free space in workspace" />
    <counter name="ShredstreamHeartbeats" summary="Number of ShredStream heartbeats successfully sent" />
    <counter name="Keepalives" summary="Number of HTTP/2 PINGs acknowledged by server" />
    <gauge name="Connected" summary="1 if connected to the bundle server, 0 if not" />
    <gauge name="RttSample" summary="Latest RTT sample at scrape time (nanoseconds)" />
    <gauge name="RttSmoothed" summary="RTT moving average (nanoseconds)" />
    <gauge name="RttVar" summary="RTT variance (nanoseconds)" />
    <histogram name="MessageRxDelayNanos" min="100000" max="1000000000">
        <summary>Message receive delay in nanoseconds from bundle server to bundle client</summary>
    </histogram>
</tile>

<tile name="verify">
    <counter name="TransactionBundlePeerFailure" summary="Count of transactions that failed to verify because a peer transaction in the bundle failed" />
    <counter name="TransactionParseFailure" summary="Count of transactions that failed to parse" />
    <counter name="TransactionDedupFailure" summary="Count of transactions that failed to deduplicate in the verify stage" />
    <counter name="TransactionVerifyFailure" summary="Count of transactions that failed to deduplicate in the verify stage" />
</tile>

<tile name="dedup">
    <counter name="TransactionBundlePeerFailure" summary="Count of transactions that failed to dedup because a peer transaction in the bundle failed" />
    <counter name="TransactionDedupFailure" summary="Count of transactions that failed to deduplicate in the dedup stage" />
    <counter name="GossipedVotesReceived" summary="Count of simple vote transactions received over gossip instead of via the normal TPU path" />
</tile>

<enum name="LutResolveResult">
    <int value="-5" name="InvalidLookupIndex" label="The transaction referenced an index in a LUT that didn't exist" />
    <int value="-4" name="AccountUninitialized" label="The account referenced as a LUT hasn't been initialized" />
    <int value="-3" name="InvalidAccountData" label="The account referenced as a LUT couldn't be parsed" />
    <int value="-2" name="InvalidAccountOwner" label="The account referenced as a LUT wasn't owned by the ALUT program ID" />
    <int value="-1" name="AccountNotFound" label="The account referenced as a LUT couldn't be found" />
    <int value="0" name="Success" label="Resolved successfully" />
</enum>

<enum name="ResolveStashOperation">
    <int value="0" name="Inserted" label="A transaction with an unknown blockhash was added to the stash" />
    <int value="1" name="Overrun" label="A transaction with an unknown blockhash was dropped because the stash was full" />
    <int value="2" name="Published" label="A transaction with an unknown blockhash was published as the blockhash became known" />
    <int value="3" name="Removed" label="A transaction with an unknown blockhash was removed from the stash without publishing, due to a bad LUT resolved failure, or no bank. These errors are double counted with the respective metrics for those categories." />
</enum>

<tile name="resolf">
    <counter name="NoBankDrop" summary="Count of transactions dropped because the bank was not available" />
    <counter name="StashOperation" enum="ResolveStashOperation" summary="Count of operations that happened on the transaction stash" />
    <counter name="LutResolved" enum="LutResolveResult" summary="Count of address lookup tables resolved" />
    <counter name="BlockhashExpired" summary="Count of transactions that failed to resolve because the blockhash was expired" />
    <counter name="TransactionBundlePeerFailure" summary="Count of transactions that failed to resolve because a peer transaction in the bundle failed" />
</tile>

<tile name="resolv">
    <counter name="NoBankDrop" summary="Count of transactions dropped because the bank was not available" />
    <counter name="StashOperation" enum="ResolveStashOperation" summary="Count of operations that happened on the transaction stash" />
    <counter name="LutResolved" enum="LutResolveResult" summary="Count of address lookup tables resolved" />
    <counter name="BlockhashExpired" summary="Count of transactions that failed to resolve because the blockhash was expired" />
    <counter name="TransactionBundlePeerFailure" summary="Count of transactions that failed to resolve because a peer transaction in the bundle failed" />
</tile>

<enum name="PackTxnInsertReturn">
    <!-- Note: You must keep the list of return values in fd_pack.h in sync with this list -->
    <int value="-14" name="NonceConflict" label="Bundle with two conflicting durable nonce transactions" />
    <int value="-13" name="BundleBlacklist" label="Transaction uses an account on the bundle blacklist" />
    <int value="-12" name="InvalidNonce" label="Transaction is an invalid durable nonce transaction" />
    <int value="-11" name="WriteSysvar" label="Transaction tries to write to a sysvar" />
    <int value="-10" name="EstimationFail" label="Estimating compute cost and/or fee failed" />
    <int value="-9" name="DuplicateAccount" label="Transaction included an account address twice" />
    <int value="-8" name="TooManyAccounts" label="Transaction tried to load too many accounts" />
    <int value="-7" name="TooLarge" label="Transaction requests too many CUs" />
    <int value="-6" name="Expired" label="Transaction already expired" />
    <int value="-5" name="AddrLut" label="Transaction loaded accounts from a lookup table" />
    <int value="-4" name="Unaffordable" label="Fee payer's balance below transaction fee" />
    <int value="-3" name="Duplicate" label="Pack aware of transaction with same signature" />
    <int value="-2" name="NoncePriority" label="Transaction's fee was too low given its compute unit requirement and another competing transactions that uses the same durable nonce" />
    <int value="-1" name="Priority" label="Transaction's fee was too low given its compute unit requirement and other competing transactions" />
    <int value="0" name="NonvoteAdd" label="Transaction that was not a simple vote added to pending transactions" />
    <int value="1" name="VoteAdd" label="Simple vote transaction was added to pending transactions" />
    <int value="2" name="NonvoteReplace" label="Transaction that was not a simple vote replaced a lower priority transaction" />
    <int value="3" name="VoteReplace" label="Simple vote transaction replaced a lower priority transaction" />
    <int value="4" name="NonceNonvoteAdd" label="Durable nonce transaction added to pending transactions" />
    <int value="5" name="Unused" label="Unused because durable nonce transactions can't be simple votes" />
    <int value="6" name="NonceNonvoteReplace" label="Durable nonce transaction replaced a lower priority transaction, likely one that uses the same durable nonce" />
</enum>

<enum name="PackTxnSchedule">
    <int value="0" name="Taken" label="Pack included the transaction in the microblock" />
    <int value="1" name="CuLimit" label="Pack skipped the transaction because it would have exceeded the block CU limit" />
    <int value="2" name="FastPath" label="Pack skipped the transaction because of account conflicts using the fast bitvector check" />
    <int value="3" name="ByteLimit" label="Pack skipped the transaction because it would have exceeded the block data size limit" />
    <int value="4" name="WriteCost" label="Pack skipped the transaction because it would have caused a writable account to exceed the per-account block write cost limit" />
    <int value="5" name="SlowPath" label="Pack skipped the transaction because of account conflicts using the full slow check" />
    <int value="6" name="DeferSkip" label="Pack skipped the transaction it previously exceeded the per-account block write cost limit too many times" />
</enum>

<enum name="PackTimingState">
    <int value="0" name="NoTxnNoBankNoLeaderNoMicroblock" label="Pack had no transactions available, and wasn't leader" />
    <int value="1" name="TxnNoBankNoLeaderNoMicroblock" label="Pack had transactions available, but wasn't leader or had hit a limit" />
    <int value="2" name="NoTxnBankNoLeaderNoMicroblock" label="Pack had no transactions available, had banks but wasn't leader" />
    <int value="3" name="TxnBankNoLeaderNoMicroblock" label="Pack had transactions available, had banks but wasn't leader" />
    <int value="4" name="NoTxnNoBankLeaderNoMicroblock" label="Pack had no transactions available, and was leader but had no available banks" />
    <int value="5" name="TxnNoBankLeaderNoMicroblock" label="Pack had transactions available, was leader, but had no available banks" />
    <int value="6" name="NoTxnBankLeaderNoMicroblock" label="Pack had available banks but no transactions" />
    <int value="7" name="TxnBankLeaderNoMicroblock" label="Pack had banks and transactions available but couldn't schedule anything non-conflicting" />
    <int value="8" name="NoTxnNoBankNoLeaderMicroblock" label="Pack scheduled a non-empty microblock while not leader" />
    <int value="9" name="TxnNoBankNoLeaderMicroblock" label="Pack scheduled a non-empty microblock while not leader" />
    <int value="10" name="NoTxnBankNoLeaderMicroblock" label="Pack scheduled a non-empty microblock while not leader" />
    <int value="11" name="TxnBankNoLeaderMicroblock" label="Pack scheduled a non-empty microblock while not leader" />
    <int value="12" name="NoTxnNoBankLeaderMicroblock" label="Pack scheduled a non-empty microblock but all banks were busy" />
    <int value="13" name="TxnNoBankLeaderMicroblock" label="Pack scheduled a non-empty microblock but all banks were busy" />
    <int value="14" name="NoTxnBankLeaderMicroblock" label="Pack scheduled a non-empty microblock and now has no transactions" />
    <int value="15" name="TxnBankLeaderMicroblock" label="Pack scheduled a non-empty microblock" />
</enum>

<enum name="AvailTxnType">
  <int value="0" name="All" label="All transactions in any treap" />
  <int value="1" name="Regular" label="Non-votes in the main treap" />
  <int value="2" name="Votes" label="Simple votes" />
  <int value="3" name="Conflicting" label="Non-votes that write to a hotly-contended account" />
  <int value="4" name="Bundles" label="Transactions that are part of a bundle" />
</enum>

<enum name="BundleCrankResult">
  <int value="0" name="NotNeeded" label="On-chain state in the correct state" />
  <int value="1" name="Inserted" label="Inserted an initializer bundle to update the on-chain state" />
  <int value="2" name="CreationFailed" label="Tried to insert an initializer bundle to update the on-chain state, but creation failed" />
  <int value="3" name="InsertionFailed" label="Tried to insert an initializer bundle to update the on-chain state, but insertion failed" />
</enum>

<tile name="pack">
    <histogram name="ScheduleMicroblockDurationSeconds" min="0.00000001" max="0.1" converter="seconds">
        <summary>Duration of scheduling one microblock</summary>
    </histogram>
    <histogram name="NoSchedMicroblockDurationSeconds" min="0.00000001" max="0.1" converter="seconds">
        <summary>Duration of discovering that there are no schedulable transactions</summary>
    </histogram>
    <histogram name="InsertTransactionDurationSeconds" min="0.00000001" max="0.1" converter="seconds">
        <summary>Duration of inserting one transaction into the pool of available transactions</summary>
    </histogram>
    <histogram name="CompleteMicroblockDurationSeconds" min="0.00000001" max="0.1" converter="seconds">
        <summary>Duration of the computation associated with marking one microblock as complete</summary>
    </histogram>
    <histogram name="TotalTransactionsPerMicroblockCount" min="0" max="64">
        <summary>Count of transactions in a scheduled microblock, including both votes and non-votes</summary>
    </histogram>
    <histogram name="VotesPerMicroblockCount" min="0" max="64">
        <summary>Count of simple vote transactions in a scheduled microblock</summary>
    </histogram>
    <counter name="NormalTransactionReceived" summary="Count of transactions received via the normal TPU path" />
    <counter name="TransactionInserted" enum="PackTxnInsertReturn" summary="Result of inserting a transaction into the pack object" />
    <counter name="MetricTiming" enum="PackTimingState" summary="Time in nanos spent in each state" />

    <counter name="TransactionDroppedFromExtra" summary="Transactions dropped from the extra transaction storage because it was full" />
    <counter name="TransactionInsertedToExtra" summary="Transactions inserted into the extra transaction storage because pack's primary storage was full" />
    <counter name="TransactionInsertedFromExtra" summary="Transactions pulled from the extra transaction storage and inserted into pack's primary storage" />
    <counter name="TransactionExpired" summary="Transactions deleted from pack because their TTL expired" />
    <counter name="TransactionDeleted" summary="Transactions dropped from pack because they were requested to be deleted" />
    <counter name="TransactionDroppedPartialBundle" summary="Transactions dropped from pack because they were part of a partial bundle" />

    <gauge name="AvailableTransactions" enum="AvailTxnType" summary="The total number of pending transactions in pack's pool that are available to be scheduled" />
    <gauge name="PendingTransactionsHeapSize" summary="The maximum number of pending transactions that pack can consider.  This value is fixed at Firedancer startup but is a useful reference for AvailableTransactions." />

    <gauge name="SmallestPendingTransaction" summary="A lower bound on the smallest non-vote transaction (in cost units) that is immediately available for scheduling" />

    <counter name="MicroblockPerBlockLimit" summary="The number of times pack did not pack a microblock because the limit on microblocks/block had been reached" />
    <counter name="DataPerBlockLimit" summary="The number of times pack did not pack a microblock because it reached the data per block limit at the start of trying to schedule a microblock" />
    <counter name="TransactionSchedule" enum="PackTxnSchedule" summary="Result of trying to consider a transaction for scheduling" />

    <counter name="BundleCrankStatus" enum="BundleCrankResult" summary="Result of considering whether bundle cranks are needed" />

    <gauge name="CusConsumedInBlock" summary="The number of cost units consumed in the current block, or 0 if pack is not currently packing a block" />
    <histogram name="CusScheduled" min="1000000" max="240000000">
        <summary>The number of cost units scheduled for each block pack produced.  This can be higher than the block limit because of returned CUs.</summary>
    </histogram>
    <histogram name="CusRebated" min="1000000" max="240000000">
        <!-- Note: The switch from cost units to compute units here is deliberate.  Of the various types of cost units, only compute units can be rebated. -->
        <summary>The number of compute units rebated for each block pack produced.  Compute units are rebated when a transaction fails prior to execution or requests more compute units than it uses.</summary>
    </histogram>
    <histogram name="CusNet" min="1000000" max="100000000">
        <summary>The net number of cost units (scheduled - rebated) in each block pack produced.</summary>
    </histogram>
    <histogram name="CusPct" min="0" max="100">
        <summary>The percent of the total block cost limit used for each block pack produced.</summary>
    </histogram>

    <counter name="DeleteMissed" summary="Count of attempts to delete a transaction that wasn't found" />
    <counter name="DeleteHit" summary="Count of attempts to delete a transaction that was found and deleted" />
</tile>

<enum name="BankSlotAcquire">
    <int value="0" name="Success" label="Success" />
    <int value="1" name="TooHigh" label="Too high" />
    <int value="2" name="TooLow" label="Too low" />
</enum>

<enum name="BankLoadAddressLookupTable">
    <int value="0" name="Success" label="Success" />
    <int value="1" name="SlotHashesSysvarNotFound" label="The slot hashes syvar could not be found." />
    <int value="2" name="AccountNotFound" label="The account storing the address lookup table was deactivated or could not be found." />
    <int value="3" name="InvalidAccountOwner" label="The account that owns the referenced lookup table is not the address lookup table program." />
    <int value="4" name="InvalidAccountData" label="The data for the referenced address lookup table is malformed." />
    <int value="5" name="InvalidIndex" label="The referenced index in the address lookup table does not exist." />
</enum>"

<enum name="TransactionError">
    <int value="0" name="Success" label="Success" />
    <int value="1" name="AccountInUse" label="An account is already being processed in another transaction in a way that does not support parallelism." />
    <int value="2" name="AccountLoadedTwice" label="A `Pubkey` appears twice in the transaction's `account_keys`.  Instructions can reference `Pubkey`s more than once but the message must contain a list with no duplicate keys." />
    <int value="3" name="AccountNotFound" label="Attempt to debit an account but found no record of a prior credit." />
    <int value="4" name="ProgramAccountNotFound" label="Attempt to load a program that does not exist." />
    <int value="5" name="InsufficientFundsForFee" label="The fee payer `Pubkey` does not have sufficient balance to pay the fee to schedule the transaction." />
    <int value="6" name="InvalidAccountForFee" label="This account may not be used to pay transaction fees." />
    <int value="7" name="AlreadyProcessed" label="The bank has seen this transaction before. This can occur under normal operation when a UDP packet is duplicated, as a user error from a client not updating its `recent_blockhash`, or as a double-spend attack." />
    <int value="8" name="BlockhashNotFound" label="The bank has not seen the given `recent_blockhash` or the transaction is too old and the `recent_blockhash` has been discarded." />
    <int value="9" name="InstructionError" label="An error occurred while processing an instruction." />
    <int value="10" name="CallChainTooDeep" label="Loader call chain is too deep." />
    <int value="11" name="MissingSignatureForFee" label="Transaction requires a fee but has no signature present." />
    <int value="12" name="InvalidAccountIndex" label="Transaction contains an invalid account reference." />
    <int value="13" name="SignatureFailure" label="Transaction did not pass signature verification." />
    <int value="14" name="InvalidProgramForExecution" label="This program may not be used for executing instructions." />
    <int value="15" name="SanitizeFailure" label="Transaction failed to sanitize accounts offsets correctly implies that account locks are not taken for this TX, and should not be unlocked." />
    <int value="16" name="ClusterMaintenance" label="Transactions are currently disabled due to cluster maintenance." />
    <int value="17" name="AccountBorrowOutstanding" label="Transaction processing left an account with an outstanding borrowed reference." />
    <int value="18" name="WouldExceedMaxBlockCostLimit" label="Transaction would exceed max Block Cost Limit." />
    <int value="19" name="UnsupportedVersion" label="Transaction version is unsupported." />
    <int value="20" name="InvalidWritableAccount" label="Transaction loads a writable account that cannot be written." />
    <int value="21" name="WouldExceedMaxAccountCostLimit" label="Transaction would exceed max account limit within the block." />
    <int value="22" name="WouldExceedAccountDataBlockLimit" label="Transaction would exceed account data limit within the block." />
    <int value="23" name="TooManyAccountLocks" label="Transaction locked too many accounts." />
    <int value="24" name="AddressLookupTableNotFound" label="Address lookup table not found." />
    <int value="25" name="InvalidAddressLookupTableOwner" label="Attempted to lookup addresses from an account owned by the wrong program." />
    <int value="26" name="InvalidAddressLookupTableData" label="Attempted to lookup addresses from an invalid account." />
    <int value="27" name="InvalidAddressLookupTableIndex" label="Address table lookup uses an invalid index." />
    <int value="28" name="InvalidRentPayingAccount" label="Transaction leaves an account with a lower balance than rent-exempt minimum." />
    <int value="29" name="WouldExceedMaxVoteCostLimit" label="Transaction would exceed max Vote Cost Limit." />
    <int value="30" name="WouldExceedAccountDataTotalLimit" label="Transaction would exceed total account data limit." />
    <int value="31" name="DuplicateInstruction" label="Transaction contains a duplicate instruction that is not allowed." />
    <int value="32" name="InsufficientFundsForRent" label="Transaction results in an account with insufficient funds for rent." />
    <int value="33" name="MaxLoadedAccountsDataSizeExceeded" label="Transaction exceeded max loaded accounts data size cap." />
    <int value="34" name="InvalidLoadedAccountsDataSizeLimit" label="LoadedAccountsDataSizeLimit set for transaction must be greater than 0." />
    <int value="35" name="ResanitizationNeeded" label="Sanitized transaction differed before/after feature activation. Needs to be resanitized." />
    <int value="36" name="ProgramExecutionTemporarilyRestricted" label="Program execution is temporarily restricted on an account." />
    <int value="37" name="UnbalancedTransaction" label="The total balance before the transaction does not equal the total balance after the transaction." />
    <int value="38" name="ProgramCacheHitMaxLimit" label="The total program cache size hit the maximum allowed limit." />
    <int value="39" name="CommitCancelled" label="The process for committing the transaction was cancelled internally." />
    <int value="40" name="BundlePeer" label="Transaction is part of a bundle and one of the peer transactions failed." />
</enum>

<enum name="TransactionResult">
    <int value="0" name="Success" label="Transaction executed successfully" />

    <!-- Preflight and execution errors. This is just instruction
         error, which can occur both when loading the transaction, and
         when executing it. When loading, it occurs when executing the
         compute budget program, or verifying precompiles. -->
    <int value="1" name="InstructonError" label="An error occurred while processing an instruction" />

    <!-- Preflight errors. These are errors in validation before we
         begin actually executing the transaction in the virtual
         machine. -->
    <int value="2" name="AccountNotFound" label="The transaction fee payer address was not found" />
    <int value="3" name="ProgramAccountNotFound" label="A program account referenced by the transaction was not found" />
    <int value="4" name="InsufficientFundsForFee" label="The transaction fee payer did not have balance to pay the fee" />
    <int value="5" name="InvalidAccountForFee" label="The transaction fee payer account is not owned by the system program, or has data that is not a nonce" />
    <int value="6" name="AlreadyProcessed" label="The transaction has already been processed in a recent block" />
    <int value="7" name="BlockhashNotFound" label="The transaction references a blockhash that is not recent, or advances a nonce with the wrong value" />
    <int value="8" name="InvalidProgramForExecution" label="A program account referenced by the transaction was no executable. TODO: No longer needed with SIMD-0162" />
    <int value="9" name="AddressLookupTableNotFound" label="The transaction references an ALUT account that does not exist or is inactive" />
    <int value="10" name="InvalidAddressLookupTableOwner" label="The transaction references an ALUT account that is not owned by the ALUT program account" />
    <int value="11" name="InvalidAddressLookupTableData" label="The transaction references an ALUT account that contains data which is not a valid ALUT" />
    <int value="12" name="InvalidAddressLookupTableIndex" label="The transaction references an account offset from the ALUT which does not exist" />
    <int value="13" name="MaxLoadedAccountsDataSizeExceeded" label="The total account data size of the loaded accounts exceeds the consensus limit" />
    <int value="14" name="DuplicateInstruction" label="A compute budget program instruction was invoked more than once" />
    <int value="15" name="InvalidLoadedAccountsDataSizeLimit" label="The compute budget program was invoked and set the loaded accounts data size to zero" />

    <!-- Preflight errors during replay. These are errors in validation
         before we begin executing the transaction, which can only
         occur during replay, as such transactions do not make it to
         execution when we are leader. -->
    <int value="16" name="AccountInUse" label="The transaction conflicts with another transaction in the microblock. TODO: No longer possible with smart dispatcher" />
    <int value="17" name="AccountLoadedTwice" label="The transaction references the same account twice" />
    <int value="18" name="SignatureFailure" label="The transaction had an invalid signature" />
    <int value="19" name="TooManyAccountLocks" label="The transaction references too many accounts. TODO: No longer possible with smart dispatcher" />

    <!-- Execution errors. These are errors which occur during actual
         execution of the transaction, after it has been validated. -->
    <int value="20" name="InsufficientFundsForRent" label="The transaction would leave an account with a lower balance than the rent-exempt minimum" />
    <int value="21" name="UnbalancedTransaction" label="The total referenced account lamports before and after the transaction was unbalanced" />

    <!-- Errors that aren't returned by the runtime execution itself,
         but are used by bank as an additional reason transactions
         might fail. -->
    <int value="22" name="BundlePeer" label="The transaction was part of a bundle and an earlier transaction in the bundle failed" />
</enum>

<tile name="bankf">
    <counter name="TransactionResult" enum="TransactionResult" summary="Result of loading and executing a transaction." />
</tile>

<tile name="bank">
    <counter name="TransactionSanitizeFailure" summary="Number of transactions that failed to sanitize." />
    <counter name="TransactionNotExecutedFailure" summary="Number of transactions that did not execute. This is different than transactions which fail to execute, which make it onto the chain." />

    <counter name="TransactionLoadAddressTables" enum="BankLoadAddressLookupTable" summary="Result of loading address lookup tables for a transaction. If there are multiple errors for the transaction, only the first one is reported." />
    <counter name="TransactionResult" enum="TransactionError" summary="Result of loading and executing a transaction." />
    <counter name="ProcessingFailed" summary="Count of transactions for which the processing stage failed and won't land on chain" />
    <counter name="FeeOnlyTransactions" summary="Count of transactions that will land on chain but without executing" />
    <counter name="ExecutedFailedTransactions" summary="Count of transactions that execute on chain but failed" />
    <counter name="SuccessfulTransactions" summary="Count of transactions that execute on chain and succeed" />
    <counter name="CostModelUndercount" summary="Count of transactions that used more CUs than the cost model should have permitted them to" />
</tile>

<tile name="poh">
    <histogram name="BeginLeaderDelaySeconds" min="0.00000001" max="0.01" converter="seconds">
        <summary>Delay between when we become leader in a slot and when we receive the bank.</summary>
    </histogram>
    <histogram name="FirstMicroblockDelaySeconds" min="0.00000001" max="0.01" converter="seconds">
        <summary>Delay between when we become leader in a slot and when we receive the first microblock.</summary>
    </histogram>
    <histogram name="SlotDoneDelaySeconds" min="0.001" max="0.6" converter="seconds">
        <summary>Delay between when we become leader in a slot and when we finish the slot.</summary>
    </histogram>
    <histogram name="BundleInitializeDelaySeconds" min="0.00000001" max="0.01" converter="seconds">
        <summary>Delay in starting the slot caused by loading the information needed to generate the bundle crank transactions</summary>
    </histogram>
</tile>

<enum name="ShredProcessingResult">
    <int value="-4" name="BadSlot" label="Shred was for a slot for which we don't know the leader" />
    <int value="-3" name="ParseFailed" label="Shred parsing failed" />
    <!-- The following need to stay in sync with the #defines in
         fd_fec_resolver.h -->
    <int value="-2" name="Rejected" label="Shred was invalid for one of many reasons" />
    <int value="-1" name="Ignored" label="Shred was ignored because we had already received or reconstructed it" />
    <int value="0" name="Okay" label="Shred accepted to an incomplete FEC set" />
    <int value="1" name="Completes" label="Shred accepted and resulted in a valid, complete FEC set" />
</enum>

<tile name="shred">
    <histogram name="ClusterContactInfoCnt" min="0" max="40200">
        <summary>Number of contact infos in the cluster contact info message</summary>
    </histogram>
    <counter name="MicroblocksAbandoned" summary="The number of microblocks that were abandoned because we switched slots without finishing the current slot" />
    <counter name="InvalidBlockId" summary="The number of times a block was created with unknown parent block_id" />
    <histogram name="BatchSz" min="1024" max="65536">
        <summary>The size (in bytes) of each microblock batch that is shredded</summary>
    </histogram>
    <histogram name="BatchMicroblockCnt" min="2" max="256">
        <summary>The number of microblocks in each microblock batch that is shredded</summary>
    </histogram>
    <histogram name="ShreddingDurationSeconds" min="0.00001" max="0.01" converter="seconds">
        <summary>Duration of producing one FEC set from the shredder</summary>
    </histogram>
    <histogram name="AddShredDurationSeconds" min="0.00000001" max="0.001" converter="seconds">
        <summary>Duration of verifying and processing one shred received from the network</summary>
    </histogram>
    <counter name="ShredProcessed" enum="ShredProcessingResult" summary="The result of processing a shred from the network" />
    <counter name="FecSetSpilled" summary="The number of FEC sets that were spilled because they didn't complete in time and we needed space" />
    <counter name="ShredRejectedInitial" summary="The number of shreds that were rejected before any resources were allocated for the FEC set" />
    <counter name="ShredRejectedUnchained" summary="The number of shreds that were rejected because they're not chained merkle shreds" />
    <counter name="FecRejectedFatal" summary="The number of FEC sets that were rejected for reasons that cause the whole FEC set to become invalid" />
    <counter name="ForceCompleteRequest" summary="The number of times we received a FEC force complete message" />
    <counter name="ForceCompleteFailure" summary="The number of times we failed to force complete a FEC set on request" />
    <counter name="ForceCompleteSuccess" summary="The number of times we successfully forced completed a FEC set on request" />
    <counter name="ShredOutRcv"          summary="The number of times we received a repair shred" />
    <counter name="ShredTurbineRcv"      summary="The number of times we received a turbine shred" />
    <histogram name="StoreInsertWait" min="0.00000001" max="0.0005" converter="seconds">
        <summary>Time in seconds spent waiting for the store to insert a new FEC set</summary>
    </histogram>
    <histogram name="StoreInsertWork" min="0.00000001" max="0.0005" converter="seconds">
        <summary>Time in seconds spent on inserting a new FEC set</summary>
    </histogram>
</tile>

<tile name="store">
    <counter name="TransactionsInserted" summary="Count of transactions produced while we were leader in the shreds that have been inserted so far" />
</tile>

<tile name="replay">
  <histogram name="StoreLinkWait" min="0.00000001" max="0.0005" converter="seconds">
    <summary>Time in seconds spent waiting for the store to link a new FEC set</summary>
  </histogram>
  <histogram name="StoreLinkWork" min="0.00000001" max="0.0005" converter="seconds">
    <summary>Time in seconds spent on linking a new FEC set</summary>
  </histogram>
  <histogram name="StoreReadWait" min="0.00000001" max="0.001" converter="seconds">
    <summary>Time in seconds spent waiting for the store to read a FEC set</summary>
  </histogram>
  <histogram name="StoreReadWork" min="0.00000001" max="0.001" converter="seconds">
    <summary>Time in seconds spent on reading a FEC set</summary>
  </histogram>
  <histogram name="StorePublishWait" min="0.00000001" max="0.001" converter="seconds">
    <summary>Time in seconds spent waiting for the store to publish a new FEC set</summary>
  </histogram>
  <histogram name="StorePublishWork" min="0.00000001" max="0.001" converter="seconds">
    <summary>Time in seconds spent on publishing a new FEC set</summary>
  </histogram>

  <gauge name="RootSlot" summary="The slot at which our node has most recently rooted" />
  <gauge name="RootDistance" summary="The distance in slots between our current root and the current reset slot" />
  <gauge name="LeaderSlot" summary="The slot at which we are currently leader, or 0 if none" />
  <gauge name="NextLeaderSlot" summary="The slot at which we are next leader, or 0 if none. If we are currently leader, this is the same as the current leader slot" />
  <gauge name="ResetSlot" summary="The slot at which we last reset the replay stage, or 0 if unknown" />
  <gauge name="MaxLiveBanks" summary="The maximum number of banks we can have alive" />
  <gauge name="LiveBanks" summary="The number of banks we currently have alive" />

  <counter name="SlotsTotal" summary="Count of slots replayed successfully" />
  <counter name="TransactionsTotal" summary="Count of transactions processed overall on the current fork" />
</tile>

<tile name="storei">
  <gauge name="FirstTurbineSlot" label="The first slot for which we have received a turbine shred" />
  <gauge name="CurrentTurbineSlot" label="The latest slot for which we have received a turbine shred" />
</tile>

<enum name="RepairSentRequestTypes">
    <int value="0" name="NeededWindow"          label="Need Window" />
    <int value="1" name="NeededHighestWindow"   label="Need Highest Window" />
    <int value="2" name="NeededOrphan"          label="Need Orphans" />
    <int value="4" name="Pong"                  label="Pong" />
</enum>

<enum name="RepairServPktTypes">
    <int value="0" name="Pong"                  label="Pong" />
    <int value="1" name="Window"                label="Window" />
    <int value="2" name="HighestWindow"         label="Highest Window" />
    <int value="3" name="Orphan"                label="Orphan" />
    <int value="4" name="Unknown"               label="Unknown" />
</enum>


<tile name="repair">
    <counter name="TotalPktCount"             clickhouse_exclude="true"                                 summary="How many network packets we have sent, including reqs, pings, pongs, etc." />
    <counter name="SentPktTypes"              clickhouse_exclude="true"  enum="RepairSentRequestTypes"  summary="What types of client messages are we sending" />
    <counter name="RepairedSlots"                                                                       summary="Until which slots have we fully repaired" />
    <counter name="CurrentSlot"                                                                         summary="Our view of the current cluster slot, max slot received" />
    <counter name="RequestPeers"                                                                        summary="How many peers have we requested" />
    <counter name="SignTileUnavail"                                                                     summary="How many times no sign tiles were available to send request" />
    <counter name="EagerRepairAggresses"                                                                summary="How many times we pass eager repair threshold" />
    <histogram name="SlotCompleteTime" min="0.200" max="2.0" converter="seconds">
      <summary>Time in seconds it took to complete a slot</summary>
    </histogram>
    <histogram name="ResponseLatency"  min="10000000" max="1000000000">
      <summary>Time in nanoseconds it took to receive a repair request response</summary>
    </histogram>
    <histogram name="SignDurationSeconds" min="0.00000001" max="0.001" converter="seconds" summary="Duration of signing a message" />
</tile>

<enum name="CrdsValue">
    <int value="0" name="ContactInfoV1" label="Contact Info V1" />
    <int value="1" name="Vote" label="Vote" />
    <int value="2" name="LowestSlot" label="Lowest Slot" />
    <int value="3" name="SnapshotHashes" label="Snapshot Hashes" />
    <int value="4" name="AccountsHashes" label="Accounts Hashes" />
    <int value="5" name="EpochSlots" label="Epoch Slots" />
    <int value="6" name="VersionV1" label="Version V1" />
    <int value="7" name="VersionV2" label="Version V2" />
    <int value="8" name="NodeInstance" label="Node Instance" />
    <int value="9" name="DuplicateShred" label="Duplicate Shred" />
    <int value="10" name="IncrementalSnapshotHashes" label="Incremental Snapshot Hashes" />
    <int value="11" name="ContactInfoV2" label="Contact Info V2" />
    <int value="12" name="RestartLastVotedForkSlots" label="Restart Last Voted Fork Slots" />
    <int value="13" name="RestartHeaviestFork" label="Restart Heaviest Fork" />
</enum>

<enum name="GossipMessage">
    <int value="0" name="PullRequest" label="Pull Request" />
    <int value="1" name="PullResponse" label="Pull Response" />
    <int value="2" name="Push" label="Push" />
    <int value="3" name="Prune" label="Prune" />
    <int value="4" name="Ping" label="Ping" />
    <int value="5" name="Pong" label="Pong" />
</enum>

<enum name="PongResponse">
    <int value="0" name="Staked" label="Pong ignored as node is staked" />
    <int value="1" name="Entrypoint" label="Pong ignored as node is an entrypoint" />
    <int value="2" name="Untracked" label="Pong ignored as node has no outstanding ping" />
    <int value="3" name="Address" label="Pong ignored as responding node doesn't match pinged address" />
    <int value="4" name="Token" label="Pong ignored as token was not valid" />
    <int value="5" name="Success" label="Pong accepted" />
</enum>

<enum name="PingTrackedType">
    <int value="0" name="Unpinged" label="Peer is known but has not been pinged yet" />
    <int value="1" name="Invalid" label="Peer was pinged but has not yet responded, or responded with an invalid pong" />
    <int value="2" name="Valid" label="Peer was pinged and is currently valid" />
    <int value="3" name="ValidRefreshing" label="Peer was pinged and is currently valid, and is being refreshed with a new ping" />
</enum>

<enum name="GossipCrdsOutcome">
    <int value="0" name="UpsertedPullResponse" label="Pull Response (upserted)" />
    <int value="1" name="UpsertedPush" label="Push (upserted)" />

    <int value="2" name="DroppedPullResponseStale" label="Pull Response (newer entry already present in table)" />
    <int value="3" name="DroppedPullResponseWallclock" label="Pull Response (outside expiry window and no contact info entry)" />
    <int value="4" name="DroppedPullResponseDuplicate" label="Pull Response (duplicate)" />

    <int value="5" name="DroppedPushStale" label="Push (newer entry already present in table)" />
    <int value="6" name="DroppedPushDuplicate" label="Push (duplicate)" />
</enum>

<tile name="gossip">
    <counter name="PingTrackerCapacity" label="The peer tracking capacity of the ping tracker" />
    <gauge   name="PingTrackerCount" enum="PingTrackedType" label="The number of peers being tracked for ping/pong" />
    <counter name="PingTrackerPongResult" enum="PongResponse" label="The result of processing a pong response to a ping" />
    <counter name="PingTrackerEvictedCount" label="The number of peers evicted from the ping tracker to make space for new peers" />
    <counter name="PingTrackedCount" label="The total number of peers ever tracked for ping/pong" />
    <counter name="PingTrackerStakeChangedCount" label="The number of times a tracked peer was removed from tracking as it became staked" />
    <counter name="PingTrackerAddressChangedCount" label="The number of times a tracked peer was removed from tracking as it's gossip address changed" />

    <gauge name="CrdsCapacity" label="The capacity of the data store" />
    <gauge name="CrdsCount" label="The number of entries in the data store" enum="CrdsValue" />
    <counter name="CrdsExpiredCount" label="The number of entries expired from the data store due to age" />
    <counter name="CrdsEvictedCount" label="The number of entries evicted from the data store to make space for new entries" />

    <gauge name="CrdsPeerCapacity" label="The capacity for storing peers in the data store" />
    <gauge name="CrdsPeerStakedCount" label="The number of staked peers in the data store" />
    <gauge name="CrdsPeerUnstakedCount" label="The number of unstaked peers in the data store" />
    <gauge name="CrdsPeerTotalStake" label="The total visible stake in the data store, in lamports" />
    <counter name="CrdsPeerEvictedCount" label="The number of peers evicted from the data store to make space for new peers" />

    <gauge name="CrdsPurgedCapacity" label="The capacity of the list of purged data store entries" />
    <gauge name="CrdsPurgedCount" label="The number of purged data store entries" />
    <counter name="CrdsPurgedExpiredCount" label="The number of purged entries expired from the purged list due to age" />
    <counter name="CrdsPurgedEvictedCount" label="The number of purged entries evicted from the data store to make space for new entries" />

    <counter name="ContactInfoUnrecognizedSocketTags" label="The number of unrecognized socket tags seen in Contact Infos" />
    <counter name="ContactInfoIpv6" label="The number of IPv6 addresses seen in Contact Infos" />

    <counter name="CrdsRxCount" label="Outcome of incoming CRDS messages" enum="GossipCrdsOutcome" />

    <counter name="MessageTxCount" label="Number of gossip messages sent" enum="GossipMessage" />
    <counter name="MessageTxBytes" label="Total wire bytes sent in gossip messages" enum="GossipMessage" />

    <counter name="CrdsTxPushCount" label="Number of CRDS values sent in push messages" enum="CrdsValue" />
    <counter name="CrdsTxPushBytes" label="Total wire bytes of CRDS sent out in push messages" enum="CrdsValue" />
    <counter name="CrdsTxPullResponseCount" label="Number of CRDS values sent in pull response messages" enum="CrdsValue" />
    <counter name="CrdsTxPullResponseBytes" label="Total wire bytes of CRDS sent out in pull response messages" enum="CrdsValue" />
</tile>

<enum name="GossvfMessageOutcome">
    <int value="0" name="SuccessPullRequest" label="Pull Request (success)" />
    <int value="1" name="SuccessPullResponse" label="Pull Response (success)" />
    <int value="2" name="SuccessPush" label="Push (success)" />
    <int value="3" name="SuccessPrune" label="Prune (success)" />
    <int value="4" name="SuccessPing" label="Ping (success)" />
    <int value="5" name="SuccessPong" label="Pong (success)" />

    <int value="6" name="DroppedUnparseable" label="Unparseable" />

    <int value="7" name="DroppedPullRequestNotContactInfo" label="Pull Request (not contact info)" />
    <int value="8" name="DroppedPullRequestLoopback" label="Pull Request (loopback)" />
    <int value="9" name="DroppedPullRequestInactive" label="Pull Request (inactive)" />
    <int value="10" name="DroppedPullRequestWallclock" label="Pull Request (wallclock)" />
    <int value="11" name="DroppedPullRequestSignature" label="Pull Request (signature)" />
    <int value="12" name="DroppedPullRequestShredVersion" label="Pull Request (shred version)" />

    <int value="13" name="DroppedPruneDestination" label="Prune (destination)" />
    <int value="14" name="DroppedPruneWallclock" label="Prune (wallclock)" />
    <int value="15" name="DroppedPruneSignature" label="Prune (signature)" />

    <int value="16" name="DroppedPushNoValidCrds" label="Push (no valid crds)" />

    <int value="17" name="DroppedPullResponseNoValidCrds" label="Pull Response (no valid crds)" />

    <int value="18" name="DroppedPingSignature" label="Ping (signature)" />

    <int value="19" name="DroppedPongSignature" label="Pong (signature)" />
</enum>

<enum name="GossvfCrdsOutcome">
    <int value="0" name="SuccessPullResponse" label="Pull Response (success)" />
    <int value="1" name="SuccessPush" label="Push (success)" />

    <int value="2" name="DroppedPullResponseDuplicate" label="Pull Response (duplicate)" />
    <int value="3" name="DroppedPullResponseSignature" label="Pull Response (signature)" />
    <int value="4" name="DroppedPullResponseRelayerNoContactInfo" label="Pull Response (relayer no contact info)" />
    <int value="4" name="DroppedPullResponseRelayerShredVersion" label="Pull Response (relayer shred version)" />
    <int value="4" name="DroppedPullResponseOriginNoContactInfo" label="Pull Response (origin no contact info)" />
    <int value="4" name="DroppedPullResponseOriginShredVersion" label="Pull Response (origin shred version)" />
    <int value="5" name="DroppedPullResponseInactive" label="Pull Response (inactive)" />

    <int value="3" name="DroppedPushSignature" label="Push (signature)" />
    <int value="4" name="DroppedPushRelayerNoContactInfo" label="Push (relayer no contact info)" />
    <int value="4" name="DroppedPushRelayerShredVersion" label="Push (relayer shred version)" />
    <int value="4" name="DroppedPushOriginNoContactInfo" label="Push (origin no contact info)" />
    <int value="4" name="DroppedPushOriginShredVersion" label="Push (origin shred version)" />
    <int value="5" name="DroppedPushInactive" label="Push (inactive)" />
    <int value="5" name="DroppedPushWallclock" label="Push (wallclock)" />
</enum>

<tile name="gossvf">
    <counter name="MessageRxCount" label="Number of gossip messages processed" enum="GossvfMessageOutcome" />
    <counter name="MessageRxBytes" label="Total wire bytes of gossip messages processed" enum="GossvfMessageOutcome" />

    <counter name="CrdsRxCount" label="Number of CRDS values processed" enum="GossvfCrdsOutcome" />
    <counter name="CrdsRxBytes" label="Total wire bytes of CRDS values processed" enum="GossvfCrdsOutcome" />
</tile>

<tile name="sign">
    <histogram name="SignDurationSeconds" min="0.00000001" max="0.001" converter="seconds" summary="Duration of signing a message" />
</tile>

<enum name="NetlinkMsg">
    <int value="0" name="Link" label="Link" />
    <int value="1" name="Neigh" label="Neighbor Table Entry" />
    <int value="2" name="Ipv4Route" label="IPv4 Route Table Entry" />
    <!-- <int value="3" name="Ipv4Rule" label="IPv4 Routing Rule" /> -->
</enum>

<enum name="RouteTable">
    <int value="0" name="Local" label="Local" />
    <int value="1" name="Main" label="Main" />
    <!-- <int value="2" name="Other" label="Other" /> -->
</enum>

<tile name="netlnk">
    <counter name="DropEvents" summary="Number of netlink drop events caught" />
    <counter name="LinkFullSyncs" summary="Number of full link table syncs done" />
    <counter name="RouteFullSyncs" summary="Number of full route table syncs done" />
    <counter name="Updates" enum="NetlinkMsg" summary="Number of netlink live updates processed" />
    <gauge name="InterfaceCount" summary="Number of network interfaces" />
    <gauge name="RouteCount" enum="RouteTable" summary="Number of IPv4 routes" />
    <counter name="NeighProbeSent" summary="Number of neighbor solicit requests sent to kernel" />
    <counter name="NeighProbeFails" summary="Number of neighbor solicit requests that failed to send (kernel too slow)" />
    <counter name="NeighProbeRateLimitHost" summary="Number of neighbor solicit that exceeded the per-host rate limit" />
    <counter name="NeighProbeRateLimitGlobal" summary="Number of neighbor solicit that exceeded the global rate limit" />
</tile>

<tile name="snaprd">
    <gauge name="State" summary="State of the tile. 0 = waiting for at least one peer from gossip, 1 = collecting peers from gossip, 2 = pinging peers, 3 = collecting ping responses, 4 = reading full snapshot file, 5 = reading incremental snapshot file, 6 = downloading full snapshot file, 7 = downloading incremental snapshot file, 8 = pinging peers before loading the incremental snapshot, 0 = collecting ping responses before loading the incremental snapshot, 10 = waiting for full snapshot to finish loading, 11 = waiting for incremental snapshot to finish loading, 12 = done." />
    <counter name="FullNumRetries" summary="Number of times we aborted and retried full snapshot download because the peer was too slow" />
    <counter name="IncrementalNumRetries" summary="Number of times we aborted and retried incremental snapshot download because the peer was too slow" />
    <gauge name="FullBytesRead" summary="Number of bytes read so far from the full snapshot. Might decrease if snapshot load is aborted and restarted" />
    <gauge name="FullBytesWritten" summary="Number of bytes written so far from the full snapshot. Might decrease if snapshot load is aborted and restarted" />
    <gauge name="FullBytesTotal" summary="Total size of the full snapshot file. Might change if snapshot load is aborted and restarted" />
    <gauge name="FullDownloadRetries" summary="Number of times we retried the full snapshot download because the peer was too slow" />
    <gauge name="IncrementalBytesRead" summary="Number of bytes read so far from the incremental snapshot. Might decrease if snapshot load is aborted and restarted" />
    <gauge name="IncrementalBytesWritten" summary="Number of bytes written so far from the incremental snapshot. Might decrease if snapshot load is aborted and restarted" />
    <gauge name="IncrementalBytesTotal" summary="Total size of the incremental snapshot file. Might change if snapshot load is aborted and restarted" />
    <gauge name="IncrementalDownloadRetries" summary="Number of times we retried the incremental snapshot download because the peer was too slow" />
    <gauge name="PredictedSlot" summary="The predicted slot from which replay starts after snapshot loading finishes. Might change if snapshot load is aborted and restarted" />
</tile>

<tile name="snapdc">
    <gauge name="State" summary="State of the tile. 0 = waiting for compressed byte stream, 1 = decompressing full snapshot, 2 = decompressing incremental snapshot, 3 = done." />
    <gauge name="FullCompressedBytesRead" summary="Number of bytes read so far from the compressed full snapshot file. Might decrease if snapshot load is aborted and restarted" />
    <gauge name="FullDecompressedBytesRead" summary="Number of bytes read so far from the decompressed file. Might decrease if snapshot load is aborted and restarted" />
    <gauge name="IncrementalCompressedBytesRead" summary="Number of bytes read so far from the compressed incremental snapshot file. Might decrease if snapshot load is aborted and restarted" />
    <gauge name="IncrementalDecompressedBytesRead" summary="Number of bytes read so far from the decompressed incremental snapshot file. Might decrease if snapshot load is aborted and restarted" />
</tile>

<tile name="snapin">
    <gauge name="State" summary="State of the tile. 0 = waiting for decompressed snapshot bytestream, 1 = processing full snapshot, 2 = processing incremental snapshot, 3 = done." />
    <gauge name="FullBytesRead" summary="Number of bytes read so far from the full snapshot. Might decrease if snapshot load is aborted and restarted" />
    <gauge name="IncrementalBytesRead" summary="Number of bytes read so far from the incremental snapshot. Might decrease if snapshot load is aborted and restarted" />
    <gauge name="AccountsInserted" summary="Number of accounts inserted during snapshot loading. Might decrease if snapshot load is aborted and restarted" />
</tile>

<tile name="metric">
    <gauge name="BootTimestampNanos" summary="Timestamp when validator was started (nanoseconds since epoch)" />
</tile>

<tile name="ipecho">
    <gauge name="ShredVersion" summary="The current shred version used by the validator" />
    <gauge name="ConnectionCount" summary="The number of active connections to the ipecho service" />
    <counter name="ConnectionsClosedOk" summary="The number of connections to the ipecho service that have been made and closed normally" />
    <counter name="ConnectionsClosedError" summary="The number of connections to the ipecho service that have been made and closed abnormally" />
    <counter name="BytesRead" summary="The total number of bytes read from all connections to the ipecho service" />
    <counter name="BytesWritten" summary="The total number of bytes written to all connections to the ipecho service" />
</tile>

</metrics>
