/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_PACKET_PACKET_PB_H_INCLUDED
#define PB_PACKET_PACKET_PB_H_INCLUDED
#include "../../../ballet/nanopb/pb_firedancer.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _packet_PacketBatch {
    pb_callback_t packets;
} packet_PacketBatch;

typedef struct _packet_PacketFlags {
    bool discard;
    bool forwarded;
    bool repair;
    bool simple_vote_tx;
    bool tracer_packet;
    bool from_staked_node;
} packet_PacketFlags;

typedef struct _packet_Meta {
    uint64_t size;
    char addr[256];
    uint32_t port;
    bool has_flags;
    packet_PacketFlags flags;
    uint64_t sender_stake;
} packet_Meta;

typedef PB_BYTES_ARRAY_T(2048) packet_Packet_data_t;
typedef struct _packet_Packet {
    packet_Packet_data_t data;
    bool has_meta;
    packet_Meta meta;
} packet_Packet;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define packet_PacketBatch_init_default          {{{NULL}, NULL}}
#define packet_Packet_init_default               {{0, {0}}, false, packet_Meta_init_default}
#define packet_Meta_init_default                 {0, "", 0, false, packet_PacketFlags_init_default, 0}
#define packet_PacketFlags_init_default          {0, 0, 0, 0, 0, 0}
#define packet_PacketBatch_init_zero             {{{NULL}, NULL}}
#define packet_Packet_init_zero                  {{0, {0}}, false, packet_Meta_init_zero}
#define packet_Meta_init_zero                    {0, "", 0, false, packet_PacketFlags_init_zero, 0}
#define packet_PacketFlags_init_zero             {0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define packet_PacketBatch_packets_tag           1
#define packet_PacketFlags_discard_tag           1
#define packet_PacketFlags_forwarded_tag         2
#define packet_PacketFlags_repair_tag            3
#define packet_PacketFlags_simple_vote_tx_tag    4
#define packet_PacketFlags_tracer_packet_tag     5
#define packet_PacketFlags_from_staked_node_tag  6
#define packet_Meta_size_tag                     1
#define packet_Meta_addr_tag                     2
#define packet_Meta_port_tag                     3
#define packet_Meta_flags_tag                    4
#define packet_Meta_sender_stake_tag             5
#define packet_Packet_data_tag                   1
#define packet_Packet_meta_tag                   2

/* Struct field encoding specification for nanopb */
#define packet_PacketBatch_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  packets,           1)
#define packet_PacketBatch_CALLBACK pb_default_field_callback
#define packet_PacketBatch_DEFAULT NULL
#define packet_PacketBatch_packets_MSGTYPE packet_Packet

#define packet_Packet_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    data,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  meta,              2)
#define packet_Packet_CALLBACK NULL
#define packet_Packet_DEFAULT NULL
#define packet_Packet_meta_MSGTYPE packet_Meta

#define packet_Meta_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   size,              1) \
X(a, STATIC,   SINGULAR, STRING,   addr,              2) \
X(a, STATIC,   SINGULAR, UINT32,   port,              3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  flags,             4) \
X(a, STATIC,   SINGULAR, UINT64,   sender_stake,      5)
#define packet_Meta_CALLBACK NULL
#define packet_Meta_DEFAULT NULL
#define packet_Meta_flags_MSGTYPE packet_PacketFlags

#define packet_PacketFlags_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     discard,           1) \
X(a, STATIC,   SINGULAR, BOOL,     forwarded,         2) \
X(a, STATIC,   SINGULAR, BOOL,     repair,            3) \
X(a, STATIC,   SINGULAR, BOOL,     simple_vote_tx,    4) \
X(a, STATIC,   SINGULAR, BOOL,     tracer_packet,     5) \
X(a, STATIC,   SINGULAR, BOOL,     from_staked_node,   6)
#define packet_PacketFlags_CALLBACK NULL
#define packet_PacketFlags_DEFAULT NULL

extern const pb_msgdesc_t packet_PacketBatch_msg;
extern const pb_msgdesc_t packet_Packet_msg;
extern const pb_msgdesc_t packet_Meta_msg;
extern const pb_msgdesc_t packet_PacketFlags_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define packet_PacketBatch_fields &packet_PacketBatch_msg
#define packet_Packet_fields &packet_Packet_msg
#define packet_Meta_fields &packet_Meta_msg
#define packet_PacketFlags_fields &packet_PacketFlags_msg

/* Maximum encoded size of messages (where known) */
/* packet_PacketBatch_size depends on runtime parameters */
#define PACKET_PACKET_PB_H_MAX_SIZE              packet_Packet_size
#define packet_Meta_size                         300
#define packet_PacketFlags_size                  12
#define packet_Packet_size                       2354

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
